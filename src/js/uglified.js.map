{"version":3,"sources":["initialize.js","modules/adder.js","modules/map.js","models/location.js","utils/app-utils.js","utils/utils.js","views/add-view.js","views/search-view.js","views/view.js"],"names":["app","initialize","onHardcodedLocationsReady","viewModel","ready","dropHardcodedLocations","searchVM","hardcodedLocations","forEach","location","marker","setMap","map","openSearchBar","message","hide","userLocations","length","checkUserLocations","treated","dropUserLocations","subscribe","treatedLocations","openAddBar","colors","blue","green","yellow","mapModule","adder","adderModule","$","parseJSON","localStorage","getItem","viewModelLocations","ko","observableArray","observable","addHardcodedLocations","window","setTimeout","addUserLocations","ViewModel","applyBindings","queryLocationsAllAtOnce","locations","queryLocation","addStoredLocation","onStoredLocationError","queryLocationsOneByOne","index","queryNewLocation","addNewLocation","onNewLocationError","onSuccess","onError","request","query","service","textSearch","results","status","google","maps","places","PlacesServiceStatus","OK","locationDetails","push","ViewModelLocation","locationName","name","hasLocation","storeNewLocation","newLocation","dropNewLocation","setItem","JSON","stringify","isHardcoded","oneLocationTreated","PlacesService","rwanda","LatLng","options","center","zoom","disableDefaultUI","zoomControl","styles","featureType","stylers","visibility","elementType","color","Map","document","getElementById","bounds","LatLngBounds","updateBoundsWithPosition","position","extend","fitBounds","panToPosition","panTo","clickEvent","isMobile","addListener","closeAll","this","geometry","highlighted","url","toLowerCase","replace","buildMarker","infoWindow","InfoWindow","maxWidth","queryWikipedia","prototype","toggle","getAnimation","close","open","setAnimation","Animation","BOUNCE","click","href","Marker","icon","animation","DROP","bind","response","description","wikipediaData","setInfoWindow","baseUrl","requestUrl","ajax","dataType","jsonp","done","fail","$infoWindowHtml","infoWindowTemplate","children","remove","match","text","attr","setContent","outerHtml","_","template","html","l","len","locationsTreated","matchMedia","matches","keyhandlerBindingFactory","keyCode","init","element","valueAccessor","allBindingsAccessor","data","bindingContext","wrappedHandler","newValueAccessor","event","call","keyup","bindingHandlers","jQuery","fn","append","eq","clone","styleMedia","media","style","createElement","script","getElementsByTagName","info","type","id","parentNode","insertBefore","getComputedStyle","currentStyle","matchMedium","styleSheet","cssText","textContent","width","ENTER_KEY","ESCAPE_KEY","UP_ARROW","DOWN_ARROW","enterKey","escapeKey","upArrow","downArrow","keepFocus","update","allBindings","focused","unwrap","$root","showMode","focus","AddViewModel","inputText","bar","addMessage","active","computed","onButtonClick","add","SearchViewModel","messaging","filter","searchMessage","filterGorillas","filterSugarCanes","filteredLocations","matchingLocations","setVisible","highlight","trim","regex","RegExp","matching","test","highlightNext","i","highlightPrevious","panToAndOpen","highlightedLocation","addVM","duration","callback","onEnterKey","onDownArrow","onUpArrow"],"mappings":"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","file":"uglified.js","sourcesContent":["/* global ko, $ */\nvar app = app || {};\n\n/* This function kicks things off and animate the arrival of locations when\n   the app launches*/\napp.initialize = function () {\n\t'use strict';\n\n\tapp.colors = {\n\t\tblue: '#00A1DE',\n\t\tgreen: '#20603D',\n\t\tyellow: '#FAD201'\n\t};\n\n\tapp.map = app.mapModule();\n\n\t// Used to add locations to the app\n\tapp.adder = app.adderModule();\n\n\t// Locations primarily exist through their names only\n\tapp.hardcodedLocations = [\n\t\t'Lake Kivu', 'Gisenyi', 'Kigali',\n\t\t'Ruhengeri', 'Kigarama', 'Butare', 'Kibungo',\n\t\t'Kinazi', 'Nyungwe Forest National Park'\n\t];\n\tapp.userLocations = $.parseJSON(localStorage.getItem('userLocations')) || [];\n\n\t// Store more elaborate location objects\n\tapp.viewModelLocations = ko.observableArray();\n\n\t// The observable \"treated\" is used to store the number of locations that have been\n\t// treated (failed query or successful build)\n\tapp.hardcodedLocations.treated = ko.observable(0);\n\tapp.hardcodedLocations.treated.subscribe(function (treatedLocations) {\n\t\tif (treatedLocations == app.hardcodedLocations.length) {\n\t\t\tonHardcodedLocationsReady();\n\t\t}\n\t});\n\tapp.adder.addHardcodedLocations(app.hardcodedLocations);\n\n\tif (app.userLocations.length) {\n\t\tapp.userLocations.treated = ko.observable(0);\n\t\t// A delay is necessary to avoid an OverQueryLimit in Google Maps\n\t\twindow.setTimeout(function() {\n\t\t\tapp.adder.addUserLocations(app.userLocations);\n\t\t}, 400);\n\t}\n\n\tapp.viewModel = new app.ViewModel();\n\tko.applyBindings(app.viewModel);\n\n\tfunction onHardcodedLocationsReady () {\n\t\tapp.viewModel.ready(true);\n\t\tdropHardcodedLocations();\n\t}\n\n\tfunction dropHardcodedLocations () {\n\t\tapp.viewModel.searchVM.hardcodedLocations().forEach(function (location) {\n\t\t\tlocation.marker.setMap(app.map);\n\t\t});\n\t\tapp.viewModel.openSearchBar();\n\t\tapp.viewModel.message('My gorillas!', 2000, function () {\n\t\t\tapp.viewModel.hide();\n\t\t\tif (app.userLocations.length > 0) {\n\t\t\t\tcheckUserLocations();\n\t\t\t}\n\t\t});\n\t}\n\n\t// If all user locations are already treated they are dropped, otherwise a subscription\n\t// is made to the number of treated locations\n\tfunction checkUserLocations () {\n\t\tif (app.userLocations.treated() == app.userLocations.length) {\n\t\t\tdropUserLocations();\n\t\t} else {\n\t\t\tapp.userLocations.treated.subscribe(function (treatedLocations) {\n\t\t\t\tif (treatedLocations == app.userLocations.length) {\n\t\t\t\t\tdropUserLocations();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction dropUserLocations () {\n\t\tapp.viewModel.searchVM.userLocations().forEach(function (location) {\n\t\t\tlocation.marker.setMap(app.map);\n\t\t});\n\t\tapp.viewModel.openAddBar();\n\t\tapp.viewModel.message('And your sugar canes!', 2000, function () {\n\t\t\tapp.viewModel.hide();\n\t\t});\n\t}\n};","/* global google.maps */\nvar app = app || {};\n\n/* This object hides the complexity of turning location names into location\n   objects */\napp.adderModule = function () {\n\t'use strict';\n\n\t// Location details are queried via Google TextSearch\n\tvar service = new google.maps.places.PlacesService(app.map);\n\n\tfunction queryLocationsAllAtOnce (locations) {\n\t\tlocations.forEach(function (location) {\n\t\t\tqueryLocation(location, addStoredLocation, onStoredLocationError);\n\t\t});\n\t}\n\n\t// After the first 10 queries, a delay is needed between each query\n\t// to avoid a Google Maps OverQueryLimit\n\tfunction queryLocationsOneByOne (locations, index) {\n\t\tvar index = index || 0;\n\t\tif (index < locations.length) {\n\t\t\tqueryLocation(locations[index], addStoredLocation, onStoredLocationError);\n\t\t\twindow.setTimeout(function () {\n\t\t\t\tqueryLocationsOneByOne(locations, index + 1);\n\t\t\t}, 500)\n\t\t}\n\t}\n\n\tfunction queryNewLocation (location) {\n\t\tqueryLocation(location, addNewLocation, onNewLocationError);\n\t}\n\n\t// The callback functions are different depending on if the location was\n\t// already stored or not\n\tfunction queryLocation(location, onSuccess, onError) {\n\t\tvar request = { query: location + ' Rwanda'};\n\n\t\tservice.textSearch(request, function (results, status) {\n\t\t\tif (status == google.maps.places.PlacesServiceStatus.OK) {\n\t\t\t\tonSuccess(results);\n\t\t\t} else {\n\t\t\t\tonError(location);\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction addStoredLocation (results) {\n\t\tvar locationDetails = results[0];\n\t\tapp.viewModelLocations.push(new app.ViewModelLocation(locationDetails));\n\t}\n\n\tfunction addNewLocation (results) {\n\t\tvar locationDetails = results[0],\n\t\t\tlocationName = locationDetails.name;\n\n\t\tif (app.hasLocation(locationName)) {\n\t\t\tapp.viewModel.message('Already occupied!');\n\n\t\t} else {\n\t\t\tstoreNewLocation(locationName);\n\n\t\t\tvar newLocation = new app.ViewModelLocation(locationDetails);\n\t\t\tdropNewLocation(newLocation);\n\t\t\tapp.viewModelLocations.push(newLocation);\n\t\t}\n\t}\n\n\tfunction dropNewLocation (newLocation) {\n\t\tnewLocation.marker.setMap(app.map);\n\t\tapp.viewModel.message('A new sugar cane!');\n\t}\n\n\tfunction storeNewLocation (locationName) {\n\t\tapp.userLocations.push(locationName);\n\t\tlocalStorage.setItem('userLocations', JSON.stringify(app.userLocations));\n\t}\n\n\tfunction onStoredLocationError (locationName) {\n\t\tvar isHardcoded = app.isHardcoded(locationName);\n\t\tapp.oneLocationTreated();\n\t}\n\n\tfunction onNewLocationError () {\n\t\tapp.viewModel.message('Not found in Rwanda!');\n\t}\n\n\treturn {\n\t\taddHardcodedLocations: queryLocationsAllAtOnce,\n\t\taddUserLocations: queryLocationsOneByOne,\n\t\taddNewLocation: queryNewLocation\n\t};\n};","/* global google.maps */\nvar app = app || {};\n\n/* This object provides a simple interface to interact with the\n   google map */\napp.mapModule = function () {\n\t'use strict';\n\n\tvar rwanda = new google.maps.LatLng(-1.930820, 29.874024);\n\tvar options = {\n\t\tcenter: rwanda,\n\t\tzoom: 9,\n\t\tdisableDefaultUI: true,\n\t\tzoomControl: true,\n\t\tstyles: [\n\t\t\t{\n\t\t\t\t\"featureType\": \"road.highway\",\n\t\t\t\t\"stylers\": [\n\t\t\t\t\t{ \"visibility\": \"off\" }\n\t\t\t\t]\n\t\t\t},{\n\t\t\t\t\"featureType\": \"administrative.country\",\n\t\t\t\t\"elementType\": \"geometry.stroke\",\n\t\t\t\t\"stylers\": [\n\t\t\t\t\t{ \"color\": app.colors.yellow }\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t};\n\n\tvar map = new google.maps.Map(document.getElementById('map'), options);\n\tvar bounds = new google.maps.LatLngBounds();\n\n\tmap.updateBoundsWithPosition = function (position) {\n\t\tbounds.extend(position);\n\t\tmap.fitBounds(bounds);\n\t};\n\n\tmap.panToPosition = function (position) {\n\t\tmap.panTo(position);\n\t};\n\n\t// These clicks are not triggered when clicking on a gorilla\n\tvar clickEvent = app.isMobile ? 'mousedown' : 'click';\n\tmap.addListener(clickEvent, function () {\n\t\tapp.viewModel.closeAll();\n\t});\n\n\treturn map;\n};","/* global google.maps, $, _, ko */\nvar app = app || {};\n\n/* This class is used to build location objects if a successful google text\n  search query occured. Each instance is stored in app.viewModelLocations */\napp.ViewModelLocation = function (locationDetails) {\n\t'use strict';\n\n\tthis.name = locationDetails.name;\n\n\tthis.position = locationDetails.geometry.location;\n\t// The bounds of the map are updated ech time a location is added\n\tapp.map.updateBoundsWithPosition(this.position);\n\n\tthis.isHardcoded = app.isHardcoded(this.name);\n\n\t// Used when searching the locations to highlight the first match\n\tthis.highlighted = ko.observable(false);\n\n\t// An image is served for each hardcoded location\n\tif (this.isHardcoded) {\n\t\tthis.url = 'img/' + this.name.toLowerCase().replace(/ /g,\"-\") + '.jpg';\n\t} else {\n\t\tthis.url = \"\";\n\t}\n\n\tthis.buildMarker();\n\n\t// The content of the infoWindow is completed after querying Wikipedia\n\tthis.infoWindow = new google.maps.InfoWindow({\n\t\tmaxWidth: 280\n\t});\n\tthis.queryWikipedia();\n};\n\napp.ViewModelLocation.prototype.toggle = function () {\n\tif (this.marker.getAnimation() !== null) {\n\t\tthis.close();\n\t} else {\n\t\tapp.viewModel.closeAll();\n\t\tthis.open();\n\t}\n};\n\napp.ViewModelLocation.prototype.close = function () {\n\tif (this.marker.getAnimation() !== null) {\n\t\tthis.marker.setAnimation(null);\n\t\tthis.infoWindow.close();\n\t}\n};\n\napp.ViewModelLocation.prototype.open = function () {\n\tthis.marker.setAnimation(google.maps.Animation.BOUNCE);\n\tthis.infoWindow.open(app.map, this.marker);\n\t// Explicitly set the wikipedia link that for some reason doesn't work otherwise\n\t$(\".wiki-link\").click(function () {\n\t\tif (this.href) {\n\t\t\twindow.open(this.href);\n\t\t}\n\t});\n};\n\napp.ViewModelLocation.prototype.buildMarker = function () {\n\t// Create the marker without assigning it to the map\n\tthis.marker = new google.maps.Marker({\n\t\tposition: this.position,\n\t\ticon: this.isHardcoded ? 'img/gorilla-pin.png' : 'img/sugar-cane-pin.png',\n\t\tanimation: google.maps.Animation.DROP\n\t});\n\n\tvar clickEvent = app.isMobile ? 'mousedown' : 'click';\n\tthis.marker.addListener(clickEvent, function () {\n\t\tapp.viewModel.hide();\n\t\tthis.toggle();\n\t}.bind(this));\n};\n\napp.ViewModelLocation.prototype.queryWikipedia = function () {\n\tvar baseUrl = 'https://en.wikipedia.org/w/api.php?action=opensearch&search=',\n\t\trequestUrl = baseUrl + this.name + '&format=json';\n\n\t$.ajax({\n\t\turl: requestUrl,\n\t\tdataType: \"jsonp\",\n\t\tjsonp: \"callback\"\n\t}).done(onSuccess.bind(this))\n\t.fail(onError.bind(this));\n\n\tfunction onSuccess (response) {\n\t\tvar description = response[2][0],\n\t\t\turl = response[3][0];\n\n\t\tvar wikipediaData = {\n\t\t\tdescription: description,\n\t\t\turl: url\n\t\t};\n\n\t\tthis.setInfoWindow(wikipediaData);\n\t\tif (!app.viewModel.ready())\n\t\t\tapp.oneLocationTreated(this.isHardcoded);\n\t}\n\n\tfunction onError () {\n\t\tthis.setInfoWindow();\n\t\tif (!app.viewModel.ready())\n\t\t\tapp.oneLocationTreated(this.isHardcoded);\n\t}\n};\n\napp.ViewModelLocation.prototype.setInfoWindow = function (wikipediaData) {\n\tthis.infoWindow.addListener('closeclick', this.close.bind(this));\n\n\tvar $infoWindowHtml = $(this.infoWindowTemplate(this));\n\n\tif (!this.isHardcoded) {\n\t\t$infoWindowHtml.children('img').remove();\n\t}\n\n\tvar description,\n\t\turl;\n\n\tif (wikipediaData) {\n\t\tdescription = wikipediaData.description;\n\t\turl = wikipediaData.url;\n\t}\n\n\t// In case the wikipedia page obtained is a disambiguation page (containing 'may refer'),\n\t// the description is not included in the infowindow and only a link is provided\n\tif (description && description.length > 0 && !description.match(/may refer/)) {\n\t\t$infoWindowHtml.children('.wiki-description').text(description);\n\t} else {\n\t\t$infoWindowHtml.children('.wiki-description').remove();\n\t}\n\n\tif (url) {\n\t\t$infoWindowHtml.children('.wiki-link').attr('href', url);\n\t} else {\n\t\t$infoWindowHtml.children('.wiki-link').remove();\n\t}\n\n\tthis.infoWindow.setContent($infoWindowHtml.outerHtml());\n};\n\n// Underscore.js is used to create a templating function for the info window\napp.ViewModelLocation.prototype.infoWindowTemplate = _.template($('#infowindow-template').html());","/* global */\nvar app = app || {};\n\n(function () {\n\t'use strict';\n\n\tapp.isHardcoded = function (locationName) {\n\t\tfor (var l=0, len=app.hardcodedLocations.length; l<len; l++) {\n\t\t\tif (app.hardcodedLocations[l] == locationName)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tapp.hasLocation = function (locationName) {\n\t\tif (app.isHardcoded(locationName)) return true;\n\t\tfor (var l=0, len=app.userLocations.length; l<len; l++) {\n\t\t\tif (app.userLocations[l] == locationName)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tapp.oneLocationTreated = function (isHardcoded) {\n\t\tvar locationsTreated;\n\t\tif (isHardcoded) {\n\t\t\tlocationsTreated = app.hardcodedLocations.treated();\n\t\t\tapp.hardcodedLocations.treated(locationsTreated + 1);\n\t\t} else if (app.userLocations.length) {\n\t\t\tlocationsTreated = app.userLocations.treated();\n\t\t\tapp.userLocations.treated(locationsTreated + 1);\n\t\t}\n\t};\n\n\tapp.isMobile = window.matchMedia(\"only screen and (max-width: 760px)\").matches;\n\t\n})();","/* global ko, $ */\n\n// Helper functions\n(function () {\n\t'use strict';\n\n\tjQuery.fn.outerHtml = function () {\n\t\treturn jQuery('<div />').append(this.eq(0).clone()).html();\n\t};\n\n\t/*! matchMedia() polyfill - Test a CSS media type/query in JS. Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. Dual MIT/BSD license */\n\twindow.matchMedia || (window.matchMedia = function() {\n\t\t\"use strict\";\n\n\t\t// For browsers that support matchMedium api such as IE 9 and webkit\n\t\tvar styleMedia = (window.styleMedia || window.media);\n\n\t\t// For those that don't support matchMedium\n\t\tif (!styleMedia) {\n\t\t\tvar style       = document.createElement('style'),\n\t\t\t\tscript      = document.getElementsByTagName('script')[0],\n\t\t\t\tinfo        = null;\n\n\t\t\tstyle.type  = 'text/css';\n\t\t\tstyle.id    = 'matchmediajs-test';\n\n\t\t\tscript.parentNode.insertBefore(style, script);\n\n\t\t\t// 'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers\n\t\t\tinfo = ('getComputedStyle' in window) && window.getComputedStyle(style, null) || style.currentStyle;\n\n\t\t\tstyleMedia = {\n\t\t\t\tmatchMedium: function(media) {\n\t\t\t\t\tvar text = '@media ' + media + '{ #matchmediajs-test { width: 1px; } }';\n\n\t\t\t\t\t// 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers\n\t\t\t\t\tif (style.styleSheet) {\n\t\t\t\t\t\tstyle.styleSheet.cssText = text;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstyle.textContent = text;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Test if media query is true or false\n\t\t\t\t\treturn info.width === '1px';\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\treturn function(media) {\n\t\t\treturn {\n\t\t\t\tmatches: styleMedia.matchMedium(media || 'all'),\n\t\t\t\tmedia: media || 'all'\n\t\t\t};\n\t\t};\n\t}());\n\n\t/* Binding handler factory taken from the TODOMVC project: http://todomvc.com/ */\n\tvar ENTER_KEY = 13;\n\tvar ESCAPE_KEY = 27;\n\tvar UP_ARROW = 38;\n\tvar DOWN_ARROW = 40;\n\n\t// A factory function we can use to create binding handlers for specific\n\t// keycodes.\n\tfunction keyhandlerBindingFactory(keyCode) {\n\t\treturn {\n\t\t\tinit: function (element, valueAccessor, allBindingsAccessor, data, bindingContext) {\n\t\t\t\tvar wrappedHandler, newValueAccessor;\n\n\t\t\t\t// wrap the handler with a check for the enter key\n\t\t\t\twrappedHandler = function (data, event) {\n\t\t\t\t\tif (event.keyCode === keyCode) {\n\t\t\t\t\t\tvalueAccessor().call(this, data, event);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// create a valueAccessor with the options that we would want to pass to the event binding\n\t\t\t\tnewValueAccessor = function () {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tkeyup: wrappedHandler\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// call the real event binding's init function\n\t\t\t\tko.bindingHandlers.event.init(element, newValueAccessor, allBindingsAccessor, data, bindingContext);\n\t\t\t}\n\t\t};\n\t}\n\n\tko.bindingHandlers.enterKey = keyhandlerBindingFactory(ENTER_KEY);\n\tko.bindingHandlers.escapeKey = keyhandlerBindingFactory(ESCAPE_KEY);\n\tko.bindingHandlers.upArrow = keyhandlerBindingFactory(UP_ARROW);\n\tko.bindingHandlers.downArrow = keyhandlerBindingFactory(DOWN_ARROW);\n\n\t// Keep the input bar focused when changing the showMode\n\tko.bindingHandlers.keepFocus = {\n\t\tupdate: function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n\t\t\tvar focused = ko.unwrap(valueAccessor());\n\t\t\tvar showMode = bindingContext.$root.searchVM.showMode();\n\t\t\tif (focused) $(element).focus();\n\t\t}\n\t};\n})();","/* global ko */\nvar app = app || {};\n\n/* The add view model is responsible for the input bar when the user is\n   adding a location */\napp.AddViewModel = function (viewModel) {\n\t'use strict';\n\n\tthis.inputText = viewModel.inputText;\n\n\tthis.bar = ko.observable(false);\n\tvar addMessage = 'Add a new place !';\n\n\tthis.active = ko.computed(function() {\n\t\tvar bar = this.bar(),\n\t\t\tinputText = this.inputText();\n\t\treturn bar && inputText != addMessage;\n\t}.bind(this));\n\n\t// Toggle add bar or add a new location\n\tthis.onButtonClick = function () {\n\t\tif (!this.active()) {\n\t\t\tif (this.bar()) {\n\t\t\t\tapp.viewModel.hide();\n\t\t\t} else {\n\t\t\t\tapp.viewModel.openAddBar();\n\t\t\t\tapp.viewModel.inputText(addMessage);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add();\n\t\t}\n\t}.bind(this);\n\n\tthis.add = function () {\n\t\tvar inputText = this.inputText();\n\t\tif (inputText.length <= 1) {\n\t\t\tapp.viewModel.message('Type a location to add!');\n\t\t} else {\n\t\t\tapp.adder.addNewLocation(inputText);\n\t\t}\n\t};\n};","/* global ko */\nvar app = app || {};\n\n/* The search view model is responsible for displaying the list of locations\n   and responding to user inputs related to searching and selecting a location */\napp.SearchViewModel = function (viewModel) {\n\t'use strict';\n\n\tthis.locations = viewModel.locations;\n\tthis.inputText = viewModel.inputText;\n\tthis.messaging = viewModel.messaging;\n\n\tthis.hardcodedLocations = ko.computed(function () {\n\t\treturn this.locations().filter(function (location) {\n\t\t\treturn location.isHardcoded;\n\t\t});\n\t}.bind(this));\n\n\tthis.userLocations = ko.computed(function () {\n\t\treturn this.locations().filter(function (location) {\n\t\t\treturn !location.isHardcoded;\n\t\t});\n\t}.bind(this));\n\n\t// The bar observable control the visibility and style of the input bar\n\tthis.bar = ko.observable(false);\n\tvar searchMessage = 'Search places in Rwanda';\n\n\tthis.showMode = ko.observable('hardcoded');\n\n\t// The active observable controls the visibility of the list view\n\tthis.active = ko.computed(function() {\n\t\tvar bar = this.bar(),\n\t\t\tinputText = this.inputText(),\n\t\t\tmessaging = this.messaging();\n\t\treturn bar && inputText != searchMessage && !messaging;\n\t}.bind(this));\n\n\t// Toggle search bar\n\tthis.onButtonClick = function () {\n\t\tif (this.bar()) {\n\t\t\tapp.viewModel.hide();\n\t\t} else {\n\t\t\tapp.viewModel.openSearchBar();\n\t\t\tthis.inputText(searchMessage);\n\t\t}\n\t}.bind(this);\n\n\tthis.filterGorillas = function () {\n\t\tif (this.showMode() != 'hardcoded') {\n\t\t\t// The search field is reset when changing the filter\n\t\t\tthis.inputText('');\n\t\t\tthis.showMode('hardcoded');\n\t\t}\n\t}.bind(this);\n\n\tthis.filterSugarCanes = function () {\n\t\tif (this.showMode() != 'user') {\n\t\t\tthis.inputText('');\n\t\t\tthis.showMode('user');\n\t\t}\n\t}.bind(this);\n\n\tthis.filteredLocations = ko.computed(function() {\n\t\tvar showMode = this.showMode();\n\t\treturn showMode == 'hardcoded' ? this.hardcodedLocations : this.userLocations;\n\t}.bind(this));\n\n\tthis.matchingLocations = ko.computed(function () {\n\t\tvar inputText = this.inputText(),\n\t\t\tactive = this.active(),\n\t\t\tlocations = this.locations(),\n\t\t\tfilteredLocations = this.filteredLocations()();\n\n\t\tif (!active) {\n\t\t\t// All locations are visible\n\t\t\tlocations.forEach(function (location) {\n\t\t\t\tlocation.marker.setVisible(true);\n\t\t\t});\n\t\t\treturn locations;\n\n\t\t} else if (inputText === '') {\n\t\t\t// Only sugar canes or gorillas are visible\n\t\t\tlocations.forEach(function (location) {\n\t\t\t\tlocation.marker.setVisible(false)\n\t\t\t});\n\t\t\tfilteredLocations.forEach(function (location) {\n\t\t\t\tlocation.marker.setVisible(true);\n\t\t\t});\n\t\t\tif (filteredLocations.length) {\n\t\t\t\tthis.highlight(filteredLocations[0]);\n\t\t\t}\n\t\t\treturn filteredLocations;\n\n\t\t} else {\n\t\t\t// Only matching sugar canes or gorillas are visible\n\t\t\tinputText = inputText.toLowerCase().trim();\n\t\t\tvar matchingLocations = filteredLocations.filter(function (location) {\n\t\t\t\t// The text typed by the user will match if it is found anywhere\n\t\t\t\t// in a location name\n\t\t\t\tvar regex = new RegExp('.*' + inputText + '.*'),\n\t\t\t\t\tmatching = regex.test(location.name.toLowerCase());\n\n\t\t\t\tlocation.marker.setVisible(matching);\n\t\t\t\treturn matching;\n\t\t\t});\n\t\t\tif (matchingLocations.length) {\n\t\t\t\tthis.highlight(matchingLocations[0]);\n\t\t\t}\n\t\t\treturn matchingLocations;\n\t\t}\n\t}.bind(this));\n\n\tthis.highlight = function (location) {\n\t\tthis.locations().forEach(function (location) {\n\t\t\tlocation.highlighted(false);\n\t\t});\n\t\tlocation.highlighted(true);\n\t}.bind(this);\n\n\t// On down arrow\n\tthis.highlightNext = function () {\n\t\tvar matchingLocations = this.matchingLocations();\n\t\tfor (var i=0, len=matchingLocations.length - 1; i<len; i++) {\n\t\t\tif (matchingLocations[i].highlighted()) {\n\t\t\t\tthis.highlight(matchingLocations[i+1]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\t// On up arrow\n\tthis.highlightPrevious = function () {\n\t\tvar matchingLocations = this.matchingLocations();\n\t\tfor (var i=1, len=matchingLocations.length; i<len; i++) {\n\t\t\tif (matchingLocations[i].highlighted()) {\n\t\t\t\tthis.highlight(matchingLocations[i-1]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\t// On enter key or list-item click\n\tthis.panToAndOpen = function () {\n\t\tvar location = this.highlightedLocation();\n\t\tif (location) {\n\t\t\tapp.viewModel.hide();\n\t\t\tlocation.toggle();\n\t\t\tapp.map.panToPosition(location.position);\n\t\t} else {\n\t\t\tapp.viewModel.message('Not in stock sorry!');\n\t\t}\n\t}.bind(this);\n\n\tthis.highlightedLocation = ko.computed(function() {\n\t\tvar matchingLocations = this.matchingLocations();\n\t\tfor (var i=0, len=matchingLocations.length; i<len; i++) {\n\t\t\tif (matchingLocations[i].highlighted()) {\n\t\t\t\treturn matchingLocations[i];\n\t\t\t}\n\t\t}\n\t}.bind(this));\n};","/* global ko */\nvar app = app || {};\n\n/* The main view model contains two sub-view models, correponding to the two main\n   functionalities of the app: searching a location and adding a location.\n   The main view model handles the input bar in the middle and how it is shared by\n   the two functionalities */\napp.ViewModel = function () {\n\t'use strict';\n\n\tthis.locations = app.viewModelLocations;\n\n\tthis.inputText = ko.observable('');\n\n\tthis.messaging = ko.observable(false);\n\n\tthis.searchVM = new app.SearchViewModel(this);\n\n\tthis.addVM = new app.AddViewModel(this);\n\n\tthis.ready = ko.observable(false);\n\n\tthis.message = function (message, duration, callback) {\n\t\tvar duration = duration || 1500;\n\t\tvar callback = callback || function() {};\n\t\tthis.messaging(true);\n\t\tthis.inputText(message);\n\t\twindow.setTimeout(function() {\n\t\t\tthis.inputText('');\n\t\t\tthis.messaging(false);\n\t\t\tcallback();\n\t\t}.bind(this), duration);\n\t};\n\n\tthis.click = function () {\n\t\tthis.inputText('');\n\t\tapp.viewModel.closeAll();\n\t}.bind(this);\n\n\tthis.hide = function () {\n\t\tthis.searchVM.bar(false);\n\t\tthis.addVM.bar(false);\n\t};\n\n\tthis.onEnterKey = function () {\n\t\tif (this.searchVM.bar()) {\n\t\t\tthis.searchVM.panToAndOpen();\n\t\t} else if (this.addVM.bar()) {\n\t\t\tthis.addVM.add();\n\t\t}\n\t};\n\n\tthis.onDownArrow = function () {\n\t\tif (this.searchVM.bar()) {\n\t\t\tthis.searchVM.highlightNext();\n\t\t}\n\t};\n\n\tthis.onUpArrow = function () {\n\t\tif (this.searchVM.bar()) {\n\t\t\tthis.searchVM.highlightPrevious();\n\t\t}\n\t};\n\n\tthis.closeAll = function () {\n\t\tthis.locations().forEach(function (location) {\n\t\t\tlocation.close();\n\t\t});\n\t};\n\n\tthis.openSearchBar = function () {\n\t\tthis.addVM.bar(false);\n\t\tthis.searchVM.bar(true);\n\t};\n\n\tthis.openAddBar = function () {\n\t\tthis.searchVM.bar(false);\n\t\tthis.addVM.bar(true);\n\t};\n};"],"sourceRoot":"/source/"}