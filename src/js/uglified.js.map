{"version":3,"sources":["initialize.js","models/location.js","modules/adder.js","modules/map.js","utils/app-utils.js","utils/utils.js","views/add-view.js","views/search-view.js","views/view.js"],"names":["app","initialize","onHardcodedLocationsReady","viewModel","ready","dropHardcodedLocations","searchVM","hardcodedLocations","forEach","location","marker","setMap","map","openSearchBar","message","hide","userLocations","length","checkUserLocations","treated","dropUserLocations","subscribe","treatedLocations","openAddBar","colors","blue","green","yellow","mapModule","adder","adderModule","$","parseJSON","localStorage","getItem","viewModelLocations","ko","observableArray","observable","addHardcodedLocations","window","setTimeout","addUserLocations","ViewModel","applyBindings","ViewModelLocation","locationDetails","this","name","position","geometry","updateBoundsWithPosition","isHardcoded","highlighted","url","toLowerCase","replace","buildMarker","infoWindow","google","maps","InfoWindow","maxWidth","queryWikipedia","prototype","toggle","getAnimation","close","closeAll","open","setAnimation","Animation","BOUNCE","click","href","Marker","icon","animation","DROP","addListener","bind","onSuccess","response","description","wikipediaData","setInfoWindow","oneLocationTreated","onError","baseUrl","requestUrl","ajax","dataType","jsonp","success","error","$infoWindowHtml","infoWindowTemplate","children","remove","match","text","attr","setContent","outerHtml","_","template","html","queryLocationsAllAtOnce","locations","queryLocation","addStoredLocation","onStoredLocationError","queryLocationsOneByOne","index","queryNewLocation","addNewLocation","onNewLocationError","request","query","service","textSearch","results","status","console","log","places","PlacesServiceStatus","OK","push","locationName","hasLocation","storeNewLocation","newLocation","dropNewLocation","setItem","JSON","stringify","PlacesService","rwanda","LatLng","options","center","zoom","disableDefaultUI","styles","featureType","stylers","visibility","elementType","color","Map","document","getElementById","bounds","LatLngBounds","extend","fitBounds","panToPosition","panTo","l","len","locationsTreated","keyhandlerBindingFactory","keyCode","init","element","valueAccessor","allBindingsAccessor","data","bindingContext","wrappedHandler","newValueAccessor","event","call","keyup","bindingHandlers","jQuery","fn","append","eq","clone","ENTER_KEY","ESCAPE_KEY","UP_ARROW","DOWN_ARROW","enterKey","escapeKey","upArrow","downArrow","keepFocus","update","allBindings","focused","unwrap","$root","showMode","focus","AddViewModel","inputText","bar","addMessage","active","computed","onButtonClick","add","SearchViewModel","messaging","filter","searchMessage","filterGorillas","filterSugarCanes","filteredLocations","matchingLocations","setVisible","highlight","trim","regex","RegExp","matching","test","highlightNext","i","highlightPrevious","panToAndOpen","highlightedLocation","addVM","duration","callback","onEnterKey","onDownArrow","onUpArrow"],"mappings":"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","file":"uglified.js","sourcesContent":["/* global ko, $ */\nvar app = app || {};\n\n/* This function kicks things off and animate the arrival of locations when\n   the app launches*/\napp.initialize = function () {\n\t'use strict';\n\n\tapp.colors = {\n\t\tblue: '#00A1DE',\n\t\tgreen: '#20603D',\n\t\tyellow: '#FAD201'\n\t};\n\n\tapp.map = app.mapModule();\n\n\t// Used to add locations to the app\n\tapp.adder = app.adderModule();\n\n\t// Locations primarily exist through their names only\n\tapp.hardcodedLocations = [\n\t\t'Lake Kivu', 'Gisenyi', 'Kigali',\n\t\t'Ruhengeri', 'Kigarama', 'Butare', 'Kibungo',\n\t\t'Kinazi', 'Nyungwe Forest National Park'\n\t];\n\tapp.userLocations = $.parseJSON(localStorage.getItem('userLocations')) || [];\n\n\t// Store more elaborate location objects\n\tapp.viewModelLocations = ko.observableArray();\n\n\t// The observable \"treated\" is used to store the number of locations that have been\n\t// treated (failed query or successful build)\n\tapp.hardcodedLocations.treated = ko.observable(0);\n\tapp.hardcodedLocations.treated.subscribe(function (treatedLocations) {\n\t\tif (treatedLocations == app.hardcodedLocations.length) {\n\t\t\tonHardcodedLocationsReady();\n\t\t}\n\t});\n\tapp.adder.addHardcodedLocations(app.hardcodedLocations);\n\n\tif (app.userLocations.length) {\n\t\tapp.userLocations.treated = ko.observable(0);\n\t\t// A delay is necessary to avoid an OverQueryLimit in Google Maps\n\t\twindow.setTimeout(function() {\n\t\t\tapp.adder.addUserLocations(app.userLocations);\n\t\t}, 400);\n\t}\n\n\tapp.viewModel = new app.ViewModel();\n\tko.applyBindings(app.viewModel);\n\n\tfunction onHardcodedLocationsReady () {\n\t\tapp.viewModel.ready(true);\n\t\tdropHardcodedLocations();\n\t}\n\n\tfunction dropHardcodedLocations () {\n\t\tapp.viewModel.searchVM.hardcodedLocations().forEach(function (location) {\n\t\t\tlocation.marker.setMap(app.map);\n\t\t});\n\t\tapp.viewModel.openSearchBar();\n\t\tapp.viewModel.message('My gorillas!', 2000, function () {\n\t\t\tapp.viewModel.hide();\n\t\t\tif (app.userLocations.length > 0) {\n\t\t\t\tcheckUserLocations();\n\t\t\t}\n\t\t});\n\t}\n\n\t// If all user locations are already treated they are dropped, otherwise a subscription\n\t// is made to the number of treated locations\n\tfunction checkUserLocations () {\n\t\tif (app.userLocations.treated() == app.userLocations.length) {\n\t\t\tdropUserLocations();\n\t\t} else {\n\t\t\tapp.userLocations.treated.subscribe(function (treatedLocations) {\n\t\t\t\tif (treatedLocations == app.userLocations.length) {\n\t\t\t\t\tdropUserLocations();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction dropUserLocations () {\n\t\tapp.viewModel.searchVM.userLocations().forEach(function (location) {\n\t\t\tlocation.marker.setMap(app.map);\n\t\t});\n\t\tapp.viewModel.openAddBar();\n\t\tapp.viewModel.message('And your sugar canes!', 2000, function () {\n\t\t\tapp.viewModel.hide();\n\t\t});\n\t}\n};","/* global google.maps, $, _, ko */\nvar app = app || {};\n\n/* This class is used to build location objects if a successful google text\n  search query occured. Each instance is stored in app.viewModelLocations */\napp.ViewModelLocation = function (locationDetails) {\n\t'use strict';\n\n\tthis.name = locationDetails.name;\n\n\tthis.position = locationDetails.geometry.location;\n\t// The bounds of the map are updated ech time a location is added\n\tapp.map.updateBoundsWithPosition(this.position);\n\n\tthis.isHardcoded = app.isHardcoded(this.name);\n\n\t// Used when searching the locations to highlight the first match\n\tthis.highlighted = ko.observable(false);\n\n\t// An image is served for each hardcoded location\n\tif (this.isHardcoded) {\n\t\tthis.url = 'img/' + this.name.toLowerCase().replace(/ /g,\"-\") + '.jpg';\n\t} else {\n\t\tthis.url = \"\";\n\t}\n\n\tthis.buildMarker();\n\n\t// The content of the infoWindow is completed after querying Wikipedia\n\tthis.infoWindow = new google.maps.InfoWindow({\n\t\tmaxWidth: 280\n\t});\n\tthis.queryWikipedia();\n};\n\napp.ViewModelLocation.prototype.toggle = function () {\n\tif (this.marker.getAnimation() !== null) {\n\t\tthis.close();\n\t} else {\n\t\tapp.viewModel.closeAll();\n\t\tthis.open();\n\t}\n};\n\napp.ViewModelLocation.prototype.close = function () {\n\tif (this.marker.getAnimation() !== null) {\n\t\tthis.marker.setAnimation(null);\n\t\tthis.infoWindow.close();\n\t}\n};\n\napp.ViewModelLocation.prototype.open = function () {\n\tthis.marker.setAnimation(google.maps.Animation.BOUNCE);\n\tthis.infoWindow.open(app.map, this.marker);\n\t// Explicitly set the wikipedia link that for some reason doesn't work otherwise\n\t$(\".wiki-link\").click(function () {\n\t\tif (this.href) {\n\t\t\twindow.open(this.href);\n\t\t}\n\t});\n};\n\napp.ViewModelLocation.prototype.buildMarker = function () {\n\t// Create the marker without assigning it to the map\n\tthis.marker = new google.maps.Marker({\n\t\tposition: this.position,\n\t\ticon: this.isHardcoded ? 'img/gorilla-pin.png' : 'img/sugar-cane-pin.png',\n\t\tanimation: google.maps.Animation.DROP\n\t});\n\n\tthis.marker.addListener('click', function () {\n\t\tapp.viewModel.hide();\n\t\tthis.toggle()\n\t}.bind(this))\n};\n\napp.ViewModelLocation.prototype.queryWikipedia = function () {\n\tvar baseUrl = 'https://en.wikipedia.org/w/api.php?action=opensearch&search=',\n\t\trequestUrl = baseUrl + this.name + '&format=json';\n\n\t$.ajax({\n\t\turl: requestUrl,\n\t\tdataType: \"jsonp\",\n\t\tjsonp: \"callback\",\n\t\tsuccess: onSuccess.bind(this),\n\t\terror: onError.bind(this)\n\t});\n\n\tfunction onSuccess (response) {\n\t\tvar description = response[2][0],\n\t\t\turl = response[3][0];\n\n\t\tvar wikipediaData = {\n\t\t\tdescription: description,\n\t\t\turl: url\n\t\t}\n\n\t\tthis.setInfoWindow(wikipediaData);\n\t\tif (!app.viewModel.ready())\n\t\t\tapp.oneLocationTreated(this.isHardcoded);\n\t}\n\n\tfunction onError () {\n\t\tthis.setInfoWindow();\n\t\tif (!app.viewModel.ready())\n\t\t\tapp.oneLocationTreated(this.isHardcoded);\n\t}\n};\n\napp.ViewModelLocation.prototype.setInfoWindow = function (wikipediaData) {\n\tthis.infoWindow.addListener('closeclick', this.close.bind(this));\n\n\tvar $infoWindowHtml = $(this.infoWindowTemplate(this));\n\n\tif (!this.isHardcoded) {\n\t\t$infoWindowHtml.children('img').remove();\n\t}\n\n\tif (wikipediaData) {\n\t\tvar description = wikipediaData.description,\n\t\t\turl = wikipediaData.url;\n\t}\n\n\t// In case the wikipedia page obtained is a disambiguation page (containing 'may refer'),\n\t// the description is not included in the infowindow and only a link is provided\n\tif (description && description.length > 0 && !description.match(/may refer/)) {\n\t\t$infoWindowHtml.children('.wiki-description').text(description);\n\t} else {\n\t\t$infoWindowHtml.children('.wiki-description').remove();\n\t}\n\n\tif (url) {\n\t\t$infoWindowHtml.children('.wiki-link').attr('href', url);\n\t} else {\n\t\t$infoWindowHtml.children('.wiki-link').remove();\n\t}\n\n\tthis.infoWindow.setContent($infoWindowHtml.outerHtml());\n};\n\n// Underscore.js is used to create a templating function for the info window\napp.ViewModelLocation.prototype.infoWindowTemplate = _.template($('#infowindow-template').html());","/* global google.maps */\nvar app = app || {};\n\n/* This object hides the complexity of turning location names into location\n   objects */\napp.adderModule = function () {\n\t'use strict';\n\n\t// Location details are queried via Google TextSearch\n\tvar service = new google.maps.places.PlacesService(app.map);\n\n\tfunction queryLocationsAllAtOnce (locations) {\n\t\tlocations.forEach(function (location) {\n\t\t\tqueryLocation(location, addStoredLocation, onStoredLocationError);\n\t\t});\n\t}\n\n\t// After the first 10 queries, a delay is needed between each query\n\t// to avoid a Google Maps OverQueryLimit\n\tfunction queryLocationsOneByOne (locations, index) {\n\t\tvar index = index || 0;\n\t\tif (index < locations.length) {\n\t\t\tqueryLocation(locations[index], addStoredLocation, onStoredLocationError);\n\t\t\twindow.setTimeout(function () {\n\t\t\t\tqueryLocationsOneByOne(locations, index + 1);\n\t\t\t}, 500)\n\t\t}\n\t}\n\n\tfunction queryNewLocation (location) {\n\t\tqueryLocation(location, addNewLocation, onNewLocationError);\n\t}\n\n\t// The callback functions are different depending on if the location was\n\t// already stored or not\n\tfunction queryLocation(location, onSuccess, onError) {\n\t\tvar request = { query: location + ' Rwanda'};\n\n\t\tservice.textSearch(request, function (results, status) {\n\t\t\tconsole.log(status);\n\t\t\tif (status == google.maps.places.PlacesServiceStatus.OK) {\n\t\t\t\tonSuccess(results);\n\t\t\t} else {\n\t\t\t\tonError(location);\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction addStoredLocation (results) {\n\t\tvar locationDetails = results[0];\n\t\tapp.viewModelLocations.push(new app.ViewModelLocation(locationDetails));\n\t}\n\n\tfunction addNewLocation (results) {\n\t\tvar locationDetails = results[0],\n\t\t\tlocationName = locationDetails.name;\n\n\t\tif (app.hasLocation(locationName)) {\n\t\t\tapp.viewModel.message('Already occupied!');\n\n\t\t} else {\n\t\t\tstoreNewLocation(locationName);\n\n\t\t\tvar newLocation = new app.ViewModelLocation(locationDetails);\n\t\t\tdropNewLocation(newLocation);\n\t\t\tapp.viewModelLocations.push(newLocation);\n\t\t}\n\t}\n\n\tfunction dropNewLocation (newLocation) {\n\t\tnewLocation.marker.setMap(app.map);\n\t\tapp.viewModel.message('A new sugar cane!');\n\t}\n\n\tfunction storeNewLocation (locationName) {\n\t\tapp.userLocations.push(locationName);\n\t\tlocalStorage.setItem('userLocations', JSON.stringify(app.userLocations));\n\t}\n\n\tfunction onStoredLocationError (locationName) {\n\t\tvar isHardcoded = app.isHardcoded(locationName);\n\t\tapp.oneLocationTreated();\n\t}\n\n\tfunction onNewLocationError () {\n\t\tapp.viewModel.message('Not found in Rwanda!');\n\t}\n\n\treturn {\n\t\taddHardcodedLocations: queryLocationsAllAtOnce,\n\t\taddUserLocations: queryLocationsOneByOne,\n\t\taddNewLocation: queryNewLocation\n\t};\n}","/* global google.maps */\nvar app = app || {};\n\n/* This object provides a simple interface to interact with the\n   google map */\napp.mapModule = function () {\n\t'use strict';\n\n\tvar rwanda = new google.maps.LatLng(-1.930820, 29.874024);\n\tvar options = {\n\t\tcenter: rwanda,\n\t\tzoom: 9,\n\t\tdisableDefaultUI: true,\n\t\tstyles: [\n\t\t\t{\n\t\t\t\t\"featureType\": \"road.highway\",\n\t\t\t\t\"stylers\": [\n\t\t\t\t\t{ \"visibility\": \"off\" }\n\t\t\t\t]\n\t\t\t},{\n\t\t\t\t\"featureType\": \"administrative.country\",\n\t\t\t\t\"elementType\": \"geometry.stroke\",\n\t\t\t\t\"stylers\": [\n\t\t\t\t\t{ \"color\": app.colors.yellow }\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t};\n\n\tvar map = new google.maps.Map(document.getElementById('map'), options);\n\tvar bounds = new google.maps.LatLngBounds();\n\n\tmap.updateBoundsWithPosition = function (position) {\n\t\tbounds.extend(position);\n\t\tmap.fitBounds(bounds);\n\t};\n\n\tmap.panToPosition = function (position) {\n\t\tmap.panTo(position);\n\t};\n\n\t// These clicks are not triggered when clicking on a gorilla\n\tmap.addListener('click', function () {\n\t\tapp.viewModel.closeAll();\n\t});\n\n\treturn map;\n};","/* global */\nvar app = app || {};\n\n(function () {\n\t'use strict';\n\n\tapp.isHardcoded = function (locationName) {\n\t\tfor (var l=0, len=app.hardcodedLocations.length; l<len; l++) {\n\t\t\tif (app.hardcodedLocations[l] == locationName)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tapp.hasLocation = function (locationName) {\n\t\tif (app.isHardcoded(locationName)) return true;\n\t\tfor (var l=0, len=app.userLocations.length; l<len; l++) {\n\t\t\tif (app.userLocations[l] == locationName)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tapp.oneLocationTreated = function (isHardcoded) {\n\t\tif (isHardcoded) {\n\t\t\tvar locationsTreated = app.hardcodedLocations.treated();\n\t\t\tapp.hardcodedLocations.treated(locationsTreated + 1);\n\t\t} else {\n\t\t\tvar locationsTreated = app.userLocations.treated();\n\t\t\tapp.userLocations.treated(locationsTreated + 1);\n\t\t}\n\t};\n})();","/* global ko, $ */\n\n// Helper functions\n(function () {\n\t'use strict';\n\n\tjQuery.fn.outerHtml = function () {\n\t\treturn jQuery('<div />').append(this.eq(0).clone()).html();\n\t};\n\n\t/* Binding handler factory taken from the TODOMVC project: http://todomvc.com/ */\n\tvar ENTER_KEY = 13;\n\tvar ESCAPE_KEY = 27;\n\tvar UP_ARROW = 38;\n\tvar DOWN_ARROW = 40;\n\n\t// A factory function we can use to create binding handlers for specific\n\t// keycodes.\n\tfunction keyhandlerBindingFactory(keyCode) {\n\t\treturn {\n\t\t\tinit: function (element, valueAccessor, allBindingsAccessor, data, bindingContext) {\n\t\t\t\tvar wrappedHandler, newValueAccessor;\n\n\t\t\t\t// wrap the handler with a check for the enter key\n\t\t\t\twrappedHandler = function (data, event) {\n\t\t\t\t\tif (event.keyCode === keyCode) {\n\t\t\t\t\t\tvalueAccessor().call(this, data, event);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// create a valueAccessor with the options that we would want to pass to the event binding\n\t\t\t\tnewValueAccessor = function () {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tkeyup: wrappedHandler\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// call the real event binding's init function\n\t\t\t\tko.bindingHandlers.event.init(element, newValueAccessor, allBindingsAccessor, data, bindingContext);\n\t\t\t}\n\t\t};\n\t}\n\n\tko.bindingHandlers.enterKey = keyhandlerBindingFactory(ENTER_KEY);\n\tko.bindingHandlers.escapeKey = keyhandlerBindingFactory(ESCAPE_KEY);\n\tko.bindingHandlers.upArrow = keyhandlerBindingFactory(UP_ARROW);\n\tko.bindingHandlers.downArrow = keyhandlerBindingFactory(DOWN_ARROW);\n\n\t// Keep the input bar focused when changing the showMode\n\tko.bindingHandlers.keepFocus = {\n\t    update: function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n\t        var focused = ko.unwrap(valueAccessor());\n\t        var showMode = bindingContext.$root.searchVM.showMode();\n\t        if (focused) $(element).focus();\n\t    }\n\t};\n})();","/* global ko */\nvar app = app || {};\n\n/* The add view model is responsible for the input bar when the user is\n   adding a location */\napp.AddViewModel = function (viewModel) {\n\t'use strict';\n\n\tthis.inputText = viewModel.inputText;\n\n\tthis.bar = ko.observable(false);\n\tvar addMessage = 'Add a new place !';\n\n\tthis.active = ko.computed(function() {\n\t\tvar bar = this.bar(),\n\t\t\tinputText = this.inputText();\n\t\treturn bar && !(inputText == addMessage);\n\t}.bind(this));\n\n\t// Toggle add bar or add a new location\n\tthis.onButtonClick = function () {\n\t\tif (!this.active()) {\n\t\t\tif (this.bar()) {\n\t\t\t\tapp.viewModel.hide();\n\t\t\t} else {\n\t\t\t\tapp.viewModel.openAddBar();\n\t\t\t\tapp.viewModel.inputText(addMessage);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add();\n\t\t}\n\t}.bind(this);\n\n\tthis.add = function () {\n\t\tvar inputText = this.inputText();\n\t\tif (inputText.length <= 1) {\n\t\t\tapp.viewModel.message('Type a location to add!');\n\t\t} else {\n\t\t\tapp.adder.addNewLocation(inputText);\n\t\t}\n\t};\n};","/* global ko */\nvar app = app || {};\n\n/* The search view model is responsible for displaying the list of locations\n   and responding to user inputs related to searching and selecting a location */\napp.SearchViewModel = function (viewModel) {\n\t'use strict';\n\n\tthis.locations = viewModel.locations;\n\tthis.inputText = viewModel.inputText;\n\tthis.messaging = viewModel.messaging;\n\n\tthis.hardcodedLocations = ko.computed(function () {\n\t\treturn this.locations().filter(function (location) {\n\t\t\treturn location.isHardcoded;\n\t\t});\n\t}.bind(this));\n\n\tthis.userLocations = ko.computed(function () {\n\t\treturn this.locations().filter(function (location) {\n\t\t\treturn !location.isHardcoded;\n\t\t});\n\t}.bind(this));\n\n\t// The bar observable control the visibility and style of the input bar\n\tthis.bar = ko.observable(false);\n\tvar searchMessage = 'Search places in Rwanda';\n\n\tthis.showMode = ko.observable('hardcoded');\n\n\t// The active observable controls the visibility of the list view\n\tthis.active = ko.computed(function() {\n\t\tvar bar = this.bar(),\n\t\t\tinputText = this.inputText(),\n\t\t\tmessaging = this.messaging();\n\t\treturn bar && !(inputText == searchMessage) && !messaging;\n\t}.bind(this));\n\n\t// Toggle search bar\n\tthis.onButtonClick = function () {\n\t\tif (this.bar()) {\n\t\t\tapp.viewModel.hide();\n\t\t} else {\n\t\t\tapp.viewModel.openSearchBar();\n\t\t\tthis.inputText(searchMessage);\n\t\t}\n\t}.bind(this);\n\n\tthis.filterGorillas = function () {\n\t\tif (this.showMode() != 'hardcoded') {\n\t\t\t// The search field is reset when changing the filter\n\t\t\tthis.inputText('');\n\t\t\tthis.showMode('hardcoded');\n\t\t}\n\t}.bind(this);\n\n\tthis.filterSugarCanes = function () {\n\t\tif (this.showMode() != 'user') {\n\t\t\tthis.inputText('');\n\t\t\tthis.showMode('user');\n\t\t}\n\t}.bind(this);\n\n\tthis.filteredLocations = ko.computed(function() {\n\t\tvar showMode = this.showMode();\n\t\treturn showMode == 'hardcoded' ? this.hardcodedLocations : this.userLocations;\n\t}.bind(this));\n\n\tthis.matchingLocations = ko.computed(function () {\n\t\tvar inputText = this.inputText(),\n\t\t\tactive = this.active(),\n\t\t\tlocations = this.locations(),\n\t\t\tfilteredLocations = this.filteredLocations()();\n\n\t\tif (!active) {\n\t\t\t// All locations are visible\n\t\t\tlocations.forEach(function (location) {\n\t\t\t\tlocation.marker.setVisible(true)\n\t\t\t});\n\t\t\treturn locations;\n\n\t\t} else if (inputText == '') {\n\t\t\t// Only sugar canes or gorillas are visible\n\t\t\tlocations.forEach(function (location) {\n\t\t\t\tlocation.marker.setVisible(false)\n\t\t\t});\n\t\t\tfilteredLocations.forEach(function (location) {\n\t\t\t\tlocation.marker.setVisible(true);\n\t\t\t});\n\t\t\tif (filteredLocations.length) {\n\t\t\t\tthis.highlight(filteredLocations[0]);\n\t\t\t}\n\t\t\treturn filteredLocations;\n\n\t\t} else {\n\t\t\t// Only matching sugar canes or gorillas are visible\n\t\t\tinputText = inputText.toLowerCase().trim();\n\t\t\tvar matchingLocations = filteredLocations.filter(function (location) {\n\t\t\t\t// The text typed by the user will match if it is found anywhere\n\t\t\t\t// in a location name\n\t\t\t\tvar regex = new RegExp('.*' + inputText + '.*'),\n\t\t\t\t\tmatching = regex.test(location.name.toLowerCase());\n\n\t\t\t\tlocation.marker.setVisible(matching);\n\t\t\t\treturn matching;\n\t\t\t});\n\t\t\tif (matchingLocations.length) {\n\t\t\t\tthis.highlight(matchingLocations[0])\n\t\t\t}\n\t\t\treturn matchingLocations;\n\t\t}\n\t}.bind(this));\n\n\tthis.highlight = function (location) {\n\t\tthis.locations().forEach(function (location) {\n\t\t\tlocation.highlighted(false);\n\t\t});\n\t\tlocation.highlighted(true);\n\t}.bind(this);\n\n\t// On down arrow\n\tthis.highlightNext = function () {\n\t\tvar matchingLocations = this.matchingLocations();\n\t\tfor (var i=0, len=matchingLocations.length - 1; i<len; i++) {\n\t\t\tif (matchingLocations[i].highlighted()) {\n\t\t\t\tthis.highlight(matchingLocations[i+1]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\t// On up arrow\n\tthis.highlightPrevious = function () {\n\t\tvar matchingLocations = this.matchingLocations();\n\t\tfor (var i=1, len=matchingLocations.length; i<len; i++) {\n\t\t\tif (matchingLocations[i].highlighted()) {\n\t\t\t\tthis.highlight(matchingLocations[i-1]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\t// On enter key or list-item click\n\tthis.panToAndOpen = function () {\n\t\tvar location = this.highlightedLocation();\n\t\tif (location) {\n\t\t\tapp.viewModel.hide();\n\t\t\tlocation.toggle();\n\t\t\tapp.map.panToPosition(location.position);\n\t\t} else {\n\t\t\tapp.viewModel.message('Not in stock sorry!');\n\t\t}\n\t}.bind(this);\n\n\tthis.highlightedLocation = ko.computed(function() {\n\t\tvar matchingLocations = this.matchingLocations();\n\t\tfor (var i=0, len=matchingLocations.length; i<len; i++) {\n\t\t\tif (matchingLocations[i].highlighted()) {\n\t\t\t\treturn matchingLocations[i];\n\t\t\t}\n\t\t}\n\t}.bind(this));\n}","/* global ko */\nvar app = app || {};\n\n/* The main view model contains two sub-view models, correponding to the two main\n   functionalities of the app: searching a location and adding a location.\n   The main view model handles the input bar in the middle and how it is shared by\n   the two functionalities */\napp.ViewModel = function () {\n\t'use strict';\n\n\tthis.locations = app.viewModelLocations;\n\n\tthis.inputText = ko.observable('');\n\n\tthis.messaging = ko.observable(false);\n\n\tthis.searchVM = new app.SearchViewModel(this);\n\n\tthis.addVM = new app.AddViewModel(this);\n\n\tthis.ready = ko.observable(false);\n\n\tthis.message = function (message, duration, callback) {\n\t\tvar duration = duration || 1500;\n\t\tvar callback = callback || function() {}\n\t\tthis.messaging(true);\n\t\tthis.inputText(message);\n\t\twindow.setTimeout(function() {\n\t\t\tthis.inputText('');\n\t\t\tthis.messaging(false);\n\t\t\tcallback();\n\t\t}.bind(this), duration)\n\t};\n\n\tthis.click = function () {\n\t\tthis.inputText('');\n\t\tapp.viewModel.closeAll();\n\t}.bind(this);\n\n\tthis.hide = function () {\n\t\tthis.searchVM.bar(false);\n\t\tthis.addVM.bar(false);\n\t};\n\n\tthis.onEnterKey = function () {\n\t\tif (this.searchVM.bar()) {\n\t\t\tthis.searchVM.panToAndOpen();\n\t\t} else if (this.addVM.bar()) {\n\t\t\tthis.addVM.add();\n\t\t}\n\t};\n\n\tthis.onDownArrow = function () {\n\t\tif (this.searchVM.bar()) {\n\t\t\tthis.searchVM.highlightNext();\n\t\t}\n\t};\n\n\tthis.onUpArrow = function () {\n\t\tif (this.searchVM.bar()) {\n\t\t\tthis.searchVM.highlightPrevious();\n\t\t}\n\t};\n\n\tthis.closeAll = function () {\n\t\tthis.locations().forEach(function (location) {\n\t\t\tlocation.close();\n\t\t});\n\t};\n\n\tthis.openSearchBar = function () {\n\t\tthis.addVM.bar(false);\n\t\tthis.searchVM.bar(true);\n\t};\n\n\tthis.openAddBar = function () {\n\t\tthis.searchVM.bar(false);\n\t\tthis.addVM.bar(true);\n\t};\n};"],"sourceRoot":"/source/"}