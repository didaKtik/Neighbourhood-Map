{"version":3,"sources":["initialize.js","models/location.js","modules/adder.js","modules/map.js","utils/app-utils.js","utils/utils.js","views/add-view.js","views/search-view.js","views/view.js"],"names":["app","initialize","onHardcodedLocationsReady","viewModel","ready","dropHardcodedLocations","searchVM","hardcodedLocations","forEach","location","marker","setMap","map","openSearchBar","message","hide","userLocations","length","checkUserLocations","treated","dropUserLocations","subscribe","treatedLocations","openAddBar","colors","blue","green","yellow","mapModule","adder","adderModule","$","parseJSON","localStorage","getItem","viewModelLocations","ko","observableArray","observable","addHardcodedLocations","window","setTimeout","addUserLocations","ViewModel","applyBindings","ViewModelLocation","locationDetails","this","name","position","geometry","updateBoundsWithPosition","isHardcoded","highlighted","url","toLowerCase","replace","buildMarker","infoWindow","google","maps","InfoWindow","maxWidth","queryWikipedia","prototype","toggle","getAnimation","close","closeAll","open","setAnimation","Animation","BOUNCE","click","href","Marker","icon","animation","DROP","clickEvent","isMobile","addListener","bind","onSuccess","response","description","wikipediaData","setInfoWindow","oneLocationTreated","onError","baseUrl","requestUrl","ajax","dataType","jsonp","done","fail","$infoWindowHtml","infoWindowTemplate","children","remove","match","text","attr","setContent","outerHtml","_","template","html","queryLocationsAllAtOnce","locations","queryLocation","addStoredLocation","onStoredLocationError","queryLocationsOneByOne","index","queryNewLocation","addNewLocation","onNewLocationError","request","query","service","textSearch","results","status","places","PlacesServiceStatus","OK","push","locationName","hasLocation","storeNewLocation","newLocation","dropNewLocation","setItem","JSON","stringify","PlacesService","rwanda","LatLng","options","center","zoom","disableDefaultUI","zoomControl","styles","featureType","stylers","visibility","elementType","color","Map","document","getElementById","bounds","LatLngBounds","extend","fitBounds","panToPosition","panTo","l","len","locationsTreated","matchMedia","matches","keyhandlerBindingFactory","keyCode","init","element","valueAccessor","allBindingsAccessor","data","bindingContext","wrappedHandler","newValueAccessor","event","call","keyup","bindingHandlers","jQuery","fn","append","eq","clone","ENTER_KEY","ESCAPE_KEY","UP_ARROW","DOWN_ARROW","enterKey","escapeKey","upArrow","downArrow","keepFocus","update","allBindings","focused","unwrap","$root","showMode","focus","AddViewModel","inputText","bar","addMessage","active","computed","onButtonClick","add","SearchViewModel","messaging","filter","searchMessage","filterGorillas","filterSugarCanes","filteredLocations","matchingLocations","setVisible","highlight","trim","regex","RegExp","matching","test","highlightNext","i","highlightPrevious","panToAndOpen","highlightedLocation","addVM","duration","callback","onEnterKey","onDownArrow","onUpArrow"],"mappings":"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","file":"uglified.js","sourcesContent":["/* global ko, $ */\nvar app = app || {};\n\n/* This function kicks things off and animate the arrival of locations when\n   the app launches*/\napp.initialize = function () {\n\t'use strict';\n\n\tapp.colors = {\n\t\tblue: '#00A1DE',\n\t\tgreen: '#20603D',\n\t\tyellow: '#FAD201'\n\t};\n\n\tapp.map = app.mapModule();\n\n\t// Used to add locations to the app\n\tapp.adder = app.adderModule();\n\n\t// Locations primarily exist through their names only\n\tapp.hardcodedLocations = [\n\t\t'Lake Kivu', 'Gisenyi', 'Kigali',\n\t\t'Ruhengeri', 'Kigarama', 'Butare', 'Kibungo',\n\t\t'Kinazi', 'Nyungwe Forest National Park'\n\t];\n\tapp.userLocations = $.parseJSON(localStorage.getItem('userLocations')) || [];\n\n\t// Store more elaborate location objects\n\tapp.viewModelLocations = ko.observableArray();\n\n\t// The observable \"treated\" is used to store the number of locations that have been\n\t// treated (failed query or successful build)\n\tapp.hardcodedLocations.treated = ko.observable(0);\n\tapp.hardcodedLocations.treated.subscribe(function (treatedLocations) {\n\t\tif (treatedLocations == app.hardcodedLocations.length) {\n\t\t\tonHardcodedLocationsReady();\n\t\t}\n\t});\n\tapp.adder.addHardcodedLocations(app.hardcodedLocations);\n\n\tif (app.userLocations.length) {\n\t\tapp.userLocations.treated = ko.observable(0);\n\t\t// A delay is necessary to avoid an OverQueryLimit in Google Maps\n\t\twindow.setTimeout(function() {\n\t\t\tapp.adder.addUserLocations(app.userLocations);\n\t\t}, 400);\n\t}\n\n\tapp.viewModel = new app.ViewModel();\n\tko.applyBindings(app.viewModel);\n\n\tfunction onHardcodedLocationsReady () {\n\t\tapp.viewModel.ready(true);\n\t\tdropHardcodedLocations();\n\t}\n\n\tfunction dropHardcodedLocations () {\n\t\tapp.viewModel.searchVM.hardcodedLocations().forEach(function (location) {\n\t\t\tlocation.marker.setMap(app.map);\n\t\t});\n\t\tapp.viewModel.openSearchBar();\n\t\tapp.viewModel.message('My gorillas!', 2000, function () {\n\t\t\tapp.viewModel.hide();\n\t\t\tif (app.userLocations.length > 0) {\n\t\t\t\tcheckUserLocations();\n\t\t\t}\n\t\t});\n\t}\n\n\t// If all user locations are already treated they are dropped, otherwise a subscription\n\t// is made to the number of treated locations\n\tfunction checkUserLocations () {\n\t\tif (app.userLocations.treated() == app.userLocations.length) {\n\t\t\tdropUserLocations();\n\t\t} else {\n\t\t\tapp.userLocations.treated.subscribe(function (treatedLocations) {\n\t\t\t\tif (treatedLocations == app.userLocations.length) {\n\t\t\t\t\tdropUserLocations();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction dropUserLocations () {\n\t\tapp.viewModel.searchVM.userLocations().forEach(function (location) {\n\t\t\tlocation.marker.setMap(app.map);\n\t\t});\n\t\tapp.viewModel.openAddBar();\n\t\tapp.viewModel.message('And your sugar canes!', 2000, function () {\n\t\t\tapp.viewModel.hide();\n\t\t});\n\t}\n};","/* global google.maps, $, _, ko */\nvar app = app || {};\n\n/* This class is used to build location objects if a successful google text\n  search query occured. Each instance is stored in app.viewModelLocations */\napp.ViewModelLocation = function (locationDetails) {\n\t'use strict';\n\n\tthis.name = locationDetails.name;\n\n\tthis.position = locationDetails.geometry.location;\n\t// The bounds of the map are updated ech time a location is added\n\tapp.map.updateBoundsWithPosition(this.position);\n\n\tthis.isHardcoded = app.isHardcoded(this.name);\n\n\t// Used when searching the locations to highlight the first match\n\tthis.highlighted = ko.observable(false);\n\n\t// An image is served for each hardcoded location\n\tif (this.isHardcoded) {\n\t\tthis.url = 'img/' + this.name.toLowerCase().replace(/ /g,\"-\") + '.jpg';\n\t} else {\n\t\tthis.url = \"\";\n\t}\n\n\tthis.buildMarker();\n\n\t// The content of the infoWindow is completed after querying Wikipedia\n\tthis.infoWindow = new google.maps.InfoWindow({\n\t\tmaxWidth: 280\n\t});\n\tthis.queryWikipedia();\n};\n\napp.ViewModelLocation.prototype.toggle = function () {\n\tif (this.marker.getAnimation() !== null) {\n\t\tthis.close();\n\t} else {\n\t\tapp.viewModel.closeAll();\n\t\tthis.open();\n\t}\n};\n\napp.ViewModelLocation.prototype.close = function () {\n\tif (this.marker.getAnimation() !== null) {\n\t\tthis.marker.setAnimation(null);\n\t\tthis.infoWindow.close();\n\t}\n};\n\napp.ViewModelLocation.prototype.open = function () {\n\tthis.marker.setAnimation(google.maps.Animation.BOUNCE);\n\tthis.infoWindow.open(app.map, this.marker);\n\t// Explicitly set the wikipedia link that for some reason doesn't work otherwise\n\t$(\".wiki-link\").click(function () {\n\t\tif (this.href) {\n\t\t\twindow.open(this.href);\n\t\t}\n\t});\n};\n\napp.ViewModelLocation.prototype.buildMarker = function () {\n\t// Create the marker without assigning it to the map\n\tthis.marker = new google.maps.Marker({\n\t\tposition: this.position,\n\t\ticon: this.isHardcoded ? 'img/gorilla-pin.png' : 'img/sugar-cane-pin.png',\n\t\tanimation: google.maps.Animation.DROP\n\t});\n\n\tvar clickEvent = app.isMobile ? 'mousedown' : 'click';\n\tthis.marker.addListener(clickEvent, function () {\n\t\tapp.viewModel.hide();\n\t\tthis.toggle();\n\t}.bind(this));\n};\n\napp.ViewModelLocation.prototype.queryWikipedia = function () {\n\tvar baseUrl = 'https://en.wikipedia.org/w/api.php?action=opensearch&search=',\n\t\trequestUrl = baseUrl + this.name + '&format=json';\n\n\t$.ajax({\n\t\turl: requestUrl,\n\t\tdataType: \"jsonp\",\n\t\tjsonp: \"callback\"\n\t}).done(onSuccess.bind(this))\n\t.fail(onError.bind(this));\n\n\tfunction onSuccess (response) {\n\t\tvar description = response[2][0],\n\t\t\turl = response[3][0];\n\n\t\tvar wikipediaData = {\n\t\t\tdescription: description,\n\t\t\turl: url\n\t\t};\n\n\t\tthis.setInfoWindow(wikipediaData);\n\t\tif (!app.viewModel.ready())\n\t\t\tapp.oneLocationTreated(this.isHardcoded);\n\t}\n\n\tfunction onError () {\n\t\tthis.setInfoWindow();\n\t\tif (!app.viewModel.ready())\n\t\t\tapp.oneLocationTreated(this.isHardcoded);\n\t}\n};\n\napp.ViewModelLocation.prototype.setInfoWindow = function (wikipediaData) {\n\tthis.infoWindow.addListener('closeclick', this.close.bind(this));\n\n\tvar $infoWindowHtml = $(this.infoWindowTemplate(this));\n\n\tif (!this.isHardcoded) {\n\t\t$infoWindowHtml.children('img').remove();\n\t}\n\n\tvar description,\n\t\turl;\n\n\tif (wikipediaData) {\n\t\tdescription = wikipediaData.description;\n\t\turl = wikipediaData.url;\n\t}\n\n\t// In case the wikipedia page obtained is a disambiguation page (containing 'may refer'),\n\t// the description is not included in the infowindow and only a link is provided\n\tif (description && description.length > 0 && !description.match(/may refer/)) {\n\t\t$infoWindowHtml.children('.wiki-description').text(description);\n\t} else {\n\t\t$infoWindowHtml.children('.wiki-description').remove();\n\t}\n\n\tif (url) {\n\t\t$infoWindowHtml.children('.wiki-link').attr('href', url);\n\t} else {\n\t\t$infoWindowHtml.children('.wiki-link').remove();\n\t}\n\n\tthis.infoWindow.setContent($infoWindowHtml.outerHtml());\n};\n\n// Underscore.js is used to create a templating function for the info window\napp.ViewModelLocation.prototype.infoWindowTemplate = _.template($('#infowindow-template').html());","/* global google.maps */\nvar app = app || {};\n\n/* This object hides the complexity of turning location names into location\n   objects */\napp.adderModule = function () {\n\t'use strict';\n\n\t// Location details are queried via Google TextSearch\n\tvar service = new google.maps.places.PlacesService(app.map);\n\n\tfunction queryLocationsAllAtOnce (locations) {\n\t\tlocations.forEach(function (location) {\n\t\t\tqueryLocation(location, addStoredLocation, onStoredLocationError);\n\t\t});\n\t}\n\n\t// After the first 10 queries, a delay is needed between each query\n\t// to avoid a Google Maps OverQueryLimit\n\tfunction queryLocationsOneByOne (locations, index) {\n\t\tvar index = index || 0;\n\t\tif (index < locations.length) {\n\t\t\tqueryLocation(locations[index], addStoredLocation, onStoredLocationError);\n\t\t\twindow.setTimeout(function () {\n\t\t\t\tqueryLocationsOneByOne(locations, index + 1);\n\t\t\t}, 500)\n\t\t}\n\t}\n\n\tfunction queryNewLocation (location) {\n\t\tqueryLocation(location, addNewLocation, onNewLocationError);\n\t}\n\n\t// The callback functions are different depending on if the location was\n\t// already stored or not\n\tfunction queryLocation(location, onSuccess, onError) {\n\t\tvar request = { query: location + ' Rwanda'};\n\n\t\tservice.textSearch(request, function (results, status) {\n\t\t\tif (status == google.maps.places.PlacesServiceStatus.OK) {\n\t\t\t\tonSuccess(results);\n\t\t\t} else {\n\t\t\t\tonError(location);\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction addStoredLocation (results) {\n\t\tvar locationDetails = results[0];\n\t\tapp.viewModelLocations.push(new app.ViewModelLocation(locationDetails));\n\t}\n\n\tfunction addNewLocation (results) {\n\t\tvar locationDetails = results[0],\n\t\t\tlocationName = locationDetails.name;\n\n\t\tif (app.hasLocation(locationName)) {\n\t\t\tapp.viewModel.message('Already occupied!');\n\n\t\t} else {\n\t\t\tstoreNewLocation(locationName);\n\n\t\t\tvar newLocation = new app.ViewModelLocation(locationDetails);\n\t\t\tdropNewLocation(newLocation);\n\t\t\tapp.viewModelLocations.push(newLocation);\n\t\t}\n\t}\n\n\tfunction dropNewLocation (newLocation) {\n\t\tnewLocation.marker.setMap(app.map);\n\t\tapp.viewModel.message('A new sugar cane!');\n\t}\n\n\tfunction storeNewLocation (locationName) {\n\t\tapp.userLocations.push(locationName);\n\t\tlocalStorage.setItem('userLocations', JSON.stringify(app.userLocations));\n\t}\n\n\tfunction onStoredLocationError (locationName) {\n\t\tvar isHardcoded = app.isHardcoded(locationName);\n\t\tapp.oneLocationTreated();\n\t}\n\n\tfunction onNewLocationError () {\n\t\tapp.viewModel.message('Not found in Rwanda!');\n\t}\n\n\treturn {\n\t\taddHardcodedLocations: queryLocationsAllAtOnce,\n\t\taddUserLocations: queryLocationsOneByOne,\n\t\taddNewLocation: queryNewLocation\n\t};\n};","/* global google.maps */\nvar app = app || {};\n\n/* This object provides a simple interface to interact with the\n   google map */\napp.mapModule = function () {\n\t'use strict';\n\n\tvar rwanda = new google.maps.LatLng(-1.930820, 29.874024);\n\tvar options = {\n\t\tcenter: rwanda,\n\t\tzoom: 9,\n\t\tdisableDefaultUI: true,\n\t\tzoomControl: true,\n\t\tstyles: [\n\t\t\t{\n\t\t\t\t\"featureType\": \"road.highway\",\n\t\t\t\t\"stylers\": [\n\t\t\t\t\t{ \"visibility\": \"off\" }\n\t\t\t\t]\n\t\t\t},{\n\t\t\t\t\"featureType\": \"administrative.country\",\n\t\t\t\t\"elementType\": \"geometry.stroke\",\n\t\t\t\t\"stylers\": [\n\t\t\t\t\t{ \"color\": app.colors.yellow }\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t};\n\n\tvar map = new google.maps.Map(document.getElementById('map'), options);\n\tvar bounds = new google.maps.LatLngBounds();\n\n\tmap.updateBoundsWithPosition = function (position) {\n\t\tbounds.extend(position);\n\t\tmap.fitBounds(bounds);\n\t};\n\n\tmap.panToPosition = function (position) {\n\t\tmap.panTo(position);\n\t};\n\n\t// These clicks are not triggered when clicking on a gorilla\n\tvar clickEvent = app.isMobile ? 'mousedown' : 'click';\n\tmap.addListener(clickEvent, function () {\n\t\tapp.viewModel.closeAll();\n\t});\n\n\treturn map;\n};","/* global */\nvar app = app || {};\n\n(function () {\n\t'use strict';\n\n\tapp.isHardcoded = function (locationName) {\n\t\tfor (var l=0, len=app.hardcodedLocations.length; l<len; l++) {\n\t\t\tif (app.hardcodedLocations[l] == locationName)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tapp.hasLocation = function (locationName) {\n\t\tif (app.isHardcoded(locationName)) return true;\n\t\tfor (var l=0, len=app.userLocations.length; l<len; l++) {\n\t\t\tif (app.userLocations[l] == locationName)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tapp.oneLocationTreated = function (isHardcoded) {\n\t\tvar locationsTreated;\n\t\tif (isHardcoded) {\n\t\t\tlocationsTreated = app.hardcodedLocations.treated();\n\t\t\tapp.hardcodedLocations.treated(locationsTreated + 1);\n\t\t} else if (app.userLocations.length) {\n\t\t\tlocationsTreated = app.userLocations.treated();\n\t\t\tapp.userLocations.treated(locationsTreated + 1);\n\t\t}\n\t};\n\n\tapp.isMobile = window.matchMedia(\"only screen and (max-width: 760px)\").matches;\n\n})();","/* global ko, $ */\n\n// Helper functions\n(function () {\n\t'use strict';\n\n\tjQuery.fn.outerHtml = function () {\n\t\treturn jQuery('<div />').append(this.eq(0).clone()).html();\n\t};\n\n\t/* Binding handler factory taken from the TODOMVC project: http://todomvc.com/ */\n\tvar ENTER_KEY = 13;\n\tvar ESCAPE_KEY = 27;\n\tvar UP_ARROW = 38;\n\tvar DOWN_ARROW = 40;\n\n\t// A factory function we can use to create binding handlers for specific\n\t// keycodes.\n\tfunction keyhandlerBindingFactory(keyCode) {\n\t\treturn {\n\t\t\tinit: function (element, valueAccessor, allBindingsAccessor, data, bindingContext) {\n\t\t\t\tvar wrappedHandler, newValueAccessor;\n\n\t\t\t\t// wrap the handler with a check for the enter key\n\t\t\t\twrappedHandler = function (data, event) {\n\t\t\t\t\tif (event.keyCode === keyCode) {\n\t\t\t\t\t\tvalueAccessor().call(this, data, event);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// create a valueAccessor with the options that we would want to pass to the event binding\n\t\t\t\tnewValueAccessor = function () {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tkeyup: wrappedHandler\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// call the real event binding's init function\n\t\t\t\tko.bindingHandlers.event.init(element, newValueAccessor, allBindingsAccessor, data, bindingContext);\n\t\t\t}\n\t\t};\n\t}\n\n\tko.bindingHandlers.enterKey = keyhandlerBindingFactory(ENTER_KEY);\n\tko.bindingHandlers.escapeKey = keyhandlerBindingFactory(ESCAPE_KEY);\n\tko.bindingHandlers.upArrow = keyhandlerBindingFactory(UP_ARROW);\n\tko.bindingHandlers.downArrow = keyhandlerBindingFactory(DOWN_ARROW);\n\n\t// Keep the input bar focused when changing the showMode\n\tko.bindingHandlers.keepFocus = {\n\t    update: function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n\t        var focused = ko.unwrap(valueAccessor());\n\t        var showMode = bindingContext.$root.searchVM.showMode();\n\t        if (focused) $(element).focus();\n\t    }\n\t};\n})();","/* global ko */\nvar app = app || {};\n\n/* The add view model is responsible for the input bar when the user is\n   adding a location */\napp.AddViewModel = function (viewModel) {\n\t'use strict';\n\n\tthis.inputText = viewModel.inputText;\n\n\tthis.bar = ko.observable(false);\n\tvar addMessage = 'Add a new place !';\n\n\tthis.active = ko.computed(function() {\n\t\tvar bar = this.bar(),\n\t\t\tinputText = this.inputText();\n\t\treturn bar && inputText != addMessage;\n\t}.bind(this));\n\n\t// Toggle add bar or add a new location\n\tthis.onButtonClick = function () {\n\t\tif (!this.active()) {\n\t\t\tif (this.bar()) {\n\t\t\t\tapp.viewModel.hide();\n\t\t\t} else {\n\t\t\t\tapp.viewModel.openAddBar();\n\t\t\t\tapp.viewModel.inputText(addMessage);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add();\n\t\t}\n\t}.bind(this);\n\n\tthis.add = function () {\n\t\tvar inputText = this.inputText();\n\t\tif (inputText.length <= 1) {\n\t\t\tapp.viewModel.message('Type a location to add!');\n\t\t} else {\n\t\t\tapp.adder.addNewLocation(inputText);\n\t\t}\n\t};\n};","/* global ko */\nvar app = app || {};\n\n/* The search view model is responsible for displaying the list of locations\n   and responding to user inputs related to searching and selecting a location */\napp.SearchViewModel = function (viewModel) {\n\t'use strict';\n\n\tthis.locations = viewModel.locations;\n\tthis.inputText = viewModel.inputText;\n\tthis.messaging = viewModel.messaging;\n\n\tthis.hardcodedLocations = ko.computed(function () {\n\t\treturn this.locations().filter(function (location) {\n\t\t\treturn location.isHardcoded;\n\t\t});\n\t}.bind(this));\n\n\tthis.userLocations = ko.computed(function () {\n\t\treturn this.locations().filter(function (location) {\n\t\t\treturn !location.isHardcoded;\n\t\t});\n\t}.bind(this));\n\n\t// The bar observable control the visibility and style of the input bar\n\tthis.bar = ko.observable(false);\n\tvar searchMessage = 'Search places in Rwanda';\n\n\tthis.showMode = ko.observable('hardcoded');\n\n\t// The active observable controls the visibility of the list view\n\tthis.active = ko.computed(function() {\n\t\tvar bar = this.bar(),\n\t\t\tinputText = this.inputText(),\n\t\t\tmessaging = this.messaging();\n\t\treturn bar && inputText != searchMessage && !messaging;\n\t}.bind(this));\n\n\t// Toggle search bar\n\tthis.onButtonClick = function () {\n\t\tif (this.bar()) {\n\t\t\tapp.viewModel.hide();\n\t\t} else {\n\t\t\tapp.viewModel.openSearchBar();\n\t\t\tthis.inputText(searchMessage);\n\t\t}\n\t}.bind(this);\n\n\tthis.filterGorillas = function () {\n\t\tif (this.showMode() != 'hardcoded') {\n\t\t\t// The search field is reset when changing the filter\n\t\t\tthis.inputText('');\n\t\t\tthis.showMode('hardcoded');\n\t\t}\n\t}.bind(this);\n\n\tthis.filterSugarCanes = function () {\n\t\tif (this.showMode() != 'user') {\n\t\t\tthis.inputText('');\n\t\t\tthis.showMode('user');\n\t\t}\n\t}.bind(this);\n\n\tthis.filteredLocations = ko.computed(function() {\n\t\tvar showMode = this.showMode();\n\t\treturn showMode == 'hardcoded' ? this.hardcodedLocations : this.userLocations;\n\t}.bind(this));\n\n\tthis.matchingLocations = ko.computed(function () {\n\t\tvar inputText = this.inputText(),\n\t\t\tactive = this.active(),\n\t\t\tlocations = this.locations(),\n\t\t\tfilteredLocations = this.filteredLocations()();\n\n\t\tif (!active) {\n\t\t\t// All locations are visible\n\t\t\tlocations.forEach(function (location) {\n\t\t\t\tlocation.marker.setVisible(true);\n\t\t\t});\n\t\t\treturn locations;\n\n\t\t} else if (inputText === '') {\n\t\t\t// Only sugar canes or gorillas are visible\n\t\t\tlocations.forEach(function (location) {\n\t\t\t\tlocation.marker.setVisible(false)\n\t\t\t});\n\t\t\tfilteredLocations.forEach(function (location) {\n\t\t\t\tlocation.marker.setVisible(true);\n\t\t\t});\n\t\t\tif (filteredLocations.length) {\n\t\t\t\tthis.highlight(filteredLocations[0]);\n\t\t\t}\n\t\t\treturn filteredLocations;\n\n\t\t} else {\n\t\t\t// Only matching sugar canes or gorillas are visible\n\t\t\tinputText = inputText.toLowerCase().trim();\n\t\t\tvar matchingLocations = filteredLocations.filter(function (location) {\n\t\t\t\t// The text typed by the user will match if it is found anywhere\n\t\t\t\t// in a location name\n\t\t\t\tvar regex = new RegExp('.*' + inputText + '.*'),\n\t\t\t\t\tmatching = regex.test(location.name.toLowerCase());\n\n\t\t\t\tlocation.marker.setVisible(matching);\n\t\t\t\treturn matching;\n\t\t\t});\n\t\t\tif (matchingLocations.length) {\n\t\t\t\tthis.highlight(matchingLocations[0]);\n\t\t\t}\n\t\t\treturn matchingLocations;\n\t\t}\n\t}.bind(this));\n\n\tthis.highlight = function (location) {\n\t\tthis.locations().forEach(function (location) {\n\t\t\tlocation.highlighted(false);\n\t\t});\n\t\tlocation.highlighted(true);\n\t}.bind(this);\n\n\t// On down arrow\n\tthis.highlightNext = function () {\n\t\tvar matchingLocations = this.matchingLocations();\n\t\tfor (var i=0, len=matchingLocations.length - 1; i<len; i++) {\n\t\t\tif (matchingLocations[i].highlighted()) {\n\t\t\t\tthis.highlight(matchingLocations[i+1]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\t// On up arrow\n\tthis.highlightPrevious = function () {\n\t\tvar matchingLocations = this.matchingLocations();\n\t\tfor (var i=1, len=matchingLocations.length; i<len; i++) {\n\t\t\tif (matchingLocations[i].highlighted()) {\n\t\t\t\tthis.highlight(matchingLocations[i-1]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\t// On enter key or list-item click\n\tthis.panToAndOpen = function () {\n\t\tvar location = this.highlightedLocation();\n\t\tif (location) {\n\t\t\tapp.viewModel.hide();\n\t\t\tlocation.toggle();\n\t\t\tapp.map.panToPosition(location.position);\n\t\t} else {\n\t\t\tapp.viewModel.message('Not in stock sorry!');\n\t\t}\n\t}.bind(this);\n\n\tthis.highlightedLocation = ko.computed(function() {\n\t\tvar matchingLocations = this.matchingLocations();\n\t\tfor (var i=0, len=matchingLocations.length; i<len; i++) {\n\t\t\tif (matchingLocations[i].highlighted()) {\n\t\t\t\treturn matchingLocations[i];\n\t\t\t}\n\t\t}\n\t}.bind(this));\n};","/* global ko */\nvar app = app || {};\n\n/* The main view model contains two sub-view models, correponding to the two main\n   functionalities of the app: searching a location and adding a location.\n   The main view model handles the input bar in the middle and how it is shared by\n   the two functionalities */\napp.ViewModel = function () {\n\t'use strict';\n\n\tthis.locations = app.viewModelLocations;\n\n\tthis.inputText = ko.observable('');\n\n\tthis.messaging = ko.observable(false);\n\n\tthis.searchVM = new app.SearchViewModel(this);\n\n\tthis.addVM = new app.AddViewModel(this);\n\n\tthis.ready = ko.observable(false);\n\n\tthis.message = function (message, duration, callback) {\n\t\tvar duration = duration || 1500;\n\t\tvar callback = callback || function() {};\n\t\tthis.messaging(true);\n\t\tthis.inputText(message);\n\t\twindow.setTimeout(function() {\n\t\t\tthis.inputText('');\n\t\t\tthis.messaging(false);\n\t\t\tcallback();\n\t\t}.bind(this), duration);\n\t};\n\n\tthis.click = function () {\n\t\tthis.inputText('');\n\t\tapp.viewModel.closeAll();\n\t}.bind(this);\n\n\tthis.hide = function () {\n\t\tthis.searchVM.bar(false);\n\t\tthis.addVM.bar(false);\n\t};\n\n\tthis.onEnterKey = function () {\n\t\tif (this.searchVM.bar()) {\n\t\t\tthis.searchVM.panToAndOpen();\n\t\t} else if (this.addVM.bar()) {\n\t\t\tthis.addVM.add();\n\t\t}\n\t};\n\n\tthis.onDownArrow = function () {\n\t\tif (this.searchVM.bar()) {\n\t\t\tthis.searchVM.highlightNext();\n\t\t}\n\t};\n\n\tthis.onUpArrow = function () {\n\t\tif (this.searchVM.bar()) {\n\t\t\tthis.searchVM.highlightPrevious();\n\t\t}\n\t};\n\n\tthis.closeAll = function () {\n\t\tthis.locations().forEach(function (location) {\n\t\t\tlocation.close();\n\t\t});\n\t};\n\n\tthis.openSearchBar = function () {\n\t\tthis.addVM.bar(false);\n\t\tthis.searchVM.bar(true);\n\t};\n\n\tthis.openAddBar = function () {\n\t\tthis.searchVM.bar(false);\n\t\tthis.addVM.bar(true);\n\t};\n};"],"sourceRoot":"/source/"}