{"version":3,"sources":["adder.js","initialize.js","location.js","map.js","utils/app-utils.js","utils/utils.js","views/add-view.js","views/search-view.js","views/view.js"],"names":["app","adderModule","queryLocationsAllAtOnce","locations","forEach","location","queryLocation","addStoredLocation","onStoredLocationError","queryLocationsOneByOne","index","length","window","setTimeout","queryNewLocation","addNewLocation","onNewLocationError","onSuccess","onError","request","query","service","textSearch","results","status","console","log","google","maps","places","PlacesServiceStatus","OK","locationDetails","viewModelLocations","push","ViewModelLocation","locationName","name","hasLocation","viewModel","message","storeNewLocation","newLocation","dropNewLocation","marker","setMap","map","userLocations","localStorage","setItem","JSON","stringify","isHardcoded","oneLocationTreated","PlacesService","addHardcodedLocations","addUserLocations","markerUrls","url","image","Image","src","$","initialize","onHardcodedLocationsReady","ready","dropHardcodedLocations","searchVM","hardcodedLocations","openSearchBar","hide","checkUserLocations","treated","dropUserLocations","subscribe","treatedLocations","openAddBar","colors","blue","green","yellow","mapModule","adder","parseJSON","getItem","ko","observableArray","observable","ViewModel","applyBindings","this","position","geometry","updateBoundsWithPosition","highlighted","toLowerCase","replace","buildMarker","infoWindow","InfoWindow","maxWidth","queryWikipedia","prototype","toggle","getAnimation","close","closeAll","open","setAnimation","Animation","BOUNCE","click","href","Marker","icon","animation","DROP","addListener","bind","response","description","wikipediaData","setInfoWindow","baseUrl","requestUrl","ajax","dataType","jsonp","success","error","$infoWindowHtml","infoWindowTemplate","children","remove","match","text","attr","setContent","outerHtml","_","template","html","rwanda","LatLng","options","center","zoom","disableDefaultUI","styles","featureType","stylers","visibility","elementType","color","Map","document","getElementById","bounds","LatLngBounds","extend","fitBounds","panToPosition","panTo","l","len","locationsTreated","keyhandlerBindingFactory","keyCode","init","element","valueAccessor","allBindingsAccessor","data","bindingContext","wrappedHandler","newValueAccessor","event","call","keyup","bindingHandlers","jQuery","fn","append","eq","clone","ENTER_KEY","ESCAPE_KEY","UP_ARROW","DOWN_ARROW","enterKey","escapeKey","upArrow","downArrow","keepFocus","update","allBindings","focused","unwrap","$root","showMode","focus","AddViewModel","inputText","messaging","bar","addMessage","active","computed","onButtonClick","add","SearchViewModel","filter","searchMessage","filterGorillas","filterSugarCanes","filteredLocations","matchingLocations","setVisible","highlight","trim","regex","RegExp","matching","test","highlightNext","i","highlightPrevious","panToAndOpen","highlightedLocation","addVM","duration","callback","onEnterKey","onDownArrow","onUpArrow"],"mappings":"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","file":"all.js","sourcesContent":["/* global google.maps */\nvar app = app || {};\n\napp.adderModule = function () {\n\t'use strict';\n\n\t// Location details are queried via Google TextSearch\n\tvar service = new google.maps.places.PlacesService(app.map);\n\n\tfunction queryLocationsAllAtOnce (locations) {\n\t\tlocations.forEach(function (location) {\n\t\t\tqueryLocation(location, addStoredLocation, onStoredLocationError);\n\t\t});\n\t}\n\n\t// After the first 10 queries, a delay is needed between each query\n\t// to avoid a Google Maps OverQueryLimit\n\tfunction queryLocationsOneByOne (locations, index) {\n\t\tvar index = index || 0;\n\t\tif (index < locations.length) {\n\t\t\tqueryLocation(locations[index], addStoredLocation, onStoredLocationError);\n\t\t\twindow.setTimeout(function () {\n\t\t\t\tqueryLocationsOneByOne(locations, index + 1);\n\t\t\t}, 500)\n\t\t}\n\t}\n\n\tfunction queryNewLocation (location) {\n\t\tqueryLocation(location, addNewLocation, onNewLocationError);\n\t}\n\n\t// The callback functions are different depending on if the location was\n\t// already stored or not\n\tfunction queryLocation(location, onSuccess, onError) {\n\t\tvar request = { query: location + ' Rwanda'};\n\n\t\tservice.textSearch(request, function (results, status) {\n\t\t\tconsole.log(status);\n\t\t\tif (status == google.maps.places.PlacesServiceStatus.OK) {\n\t\t\t\tonSuccess(results);\n\t\t\t} else {\n\t\t\t\tonError(location);\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction addStoredLocation (results) {\n\t\tvar locationDetails = results[0];\n\t\tapp.viewModelLocations.push(new app.ViewModelLocation(locationDetails));\n\t}\n\n\tfunction addNewLocation (results) {\n\t\tvar locationDetails = results[0],\n\t\t\tlocationName = locationDetails.name;\n\n\t\tif (app.hasLocation(locationName)) {\n\t\t\tapp.viewModel.message('Already occupied!');\n\n\t\t} else {\n\t\t\tstoreNewLocation(locationName);\n\n\t\t\tvar newLocation = new app.ViewModelLocation(locationDetails);\n\t\t\tdropNewLocation(newLocation);\n\t\t\tapp.viewModelLocations.push(newLocation);\n\t\t}\n\t}\n\n\tfunction dropNewLocation (newLocation) {\n\t\tnewLocation.marker.setMap(app.map);\n\t\tapp.viewModel.message('A new sugar cane!');\n\t}\n\n\tfunction storeNewLocation (locationName) {\n\t\tapp.userLocations.push(locationName);\n\t\tlocalStorage.setItem('userLocations', JSON.stringify(app.userLocations));\n\t}\n\n\tfunction onStoredLocationError (locationName) {\n\t\tvar isHardcoded = app.isHardcoded(locationName);\n\t\tapp.oneLocationTreated();\n\t}\n\n\tfunction onNewLocationError () {\n\t\tapp.viewModel.message('Not found in Rwanda!');\n\t}\n\n\treturn {\n\t\taddHardcodedLocations: queryLocationsAllAtOnce,\n\t\taddUserLocations: queryLocationsOneByOne,\n\t\taddNewLocation: queryNewLocation\n\t};\n}","/* global ko, $ */\nvar app = app || {};\n\n/* The gorilla and sugar cane pins are loaded first so that the dropping is\nnot slowed down by the queries */\n(function () {\n\t'use strict';\n\n\tvar markerUrls = ['img/gorilla-pin.png', 'img/sugar-cane-pin.png'];\n\tmarkerUrls.forEach(function (url) {\n\t\tvar image = new Image();\n\t\timage.src = url;\n\t});\n})();\n\n$(function () {\n\t'use strict';\n\n\tapp.initialize();\n});\n\napp.initialize = function () {\n\t'use strict';\n\n\tapp.colors = {\n\t\tblue: '#00A1DE',\n\t\tgreen: '#20603D',\n\t\tyellow: '#FAD201'\n\t};\n\n\tapp.map = app.mapModule();\n\n\t// Used to add locations to the app\n\tapp.adder = app.adderModule();\n\n\t// Locations primarily exist through their names only\n\tapp.hardcodedLocations = [\n\t\t'Lake Kivu', 'Gisenyi', 'Kigali',\n\t\t'Ruhengeri', 'Kigarama', 'Butare', 'Kibungo',\n\t\t'Kinazi', 'Nyungwe Forest National Park'\n\t];\n\tapp.userLocations = $.parseJSON(localStorage.getItem('userLocations')) || [];\n\n\t// Store more elaborate location objects\n\tapp.viewModelLocations = ko.observableArray();\n\n\t// The observable \"treated\" is used to store the number of locations that have been\n\t// treated (failed query or successful build)\n\tapp.hardcodedLocations.treated = ko.observable(0);\n\tapp.hardcodedLocations.treated.subscribe(function (treatedLocations) {\n\t\tif (treatedLocations == app.hardcodedLocations.length) {\n\t\t\tonHardcodedLocationsReady();\n\t\t}\n\t});\n\tapp.adder.addHardcodedLocations(app.hardcodedLocations);\n\n\tif (app.userLocations.length > 0) {\n\t\tapp.userLocations.treated = ko.observable(0);\n\t\t// A delay is necessary to avoid an OverQueryLimit in Google Maps\n\t\twindow.setTimeout(function() {\n\t\t\tapp.adder.addUserLocations(app.userLocations);\n\t\t}, 200);\n\t}\n\n\tapp.viewModel = new app.ViewModel();\n\tko.applyBindings(app.viewModel);\n\n\tfunction onHardcodedLocationsReady () {\n\t\tapp.viewModel.ready(true);\n\t\tdropHardcodedLocations();\n\t}\n\n\tfunction dropHardcodedLocations () {\n\t\tapp.viewModel.searchVM.hardcodedLocations().forEach(function (location) {\n\t\t\tlocation.marker.setMap(app.map);\n\t\t});\n\t\tapp.viewModel.openSearchBar();\n\t\tapp.viewModel.message('My gorillas!', 2000, function () {\n\t\t\tapp.viewModel.hide();\n\t\t\tif (app.userLocations.length > 0) {\n\t\t\t\tcheckUserLocations();\n\t\t\t}\n\t\t});\n\t}\n\n\t// If all user locations are already treated they are dropped, otherwise a subscription\n\t// is made to the number of treated locations\n\tfunction checkUserLocations () {\n\t\tif (app.userLocations.treated() == app.userLocations.length) {\n\t\t\tdropUserLocations();\n\t\t} else {\n\t\t\tapp.userLocations.treated.subscribe(function (treatedLocations) {\n\t\t\t\tif (treatedLocations == app.userLocations.length) {\n\t\t\t\t\tdropUserLocations();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction dropUserLocations () {\n\t\tapp.viewModel.searchVM.userLocations().forEach(function (location) {\n\t\t\tlocation.marker.setMap(app.map);\n\t\t});\n\t\tapp.viewModel.openAddBar();\n\t\tapp.viewModel.message('And your sugar canes!', 2000, function () {\n\t\t\tapp.viewModel.hide();\n\t\t});\n\t}\n};","/* global google.maps, $, _, ko */\nvar app = app || {};\n\n/* This class is used to build location objects if a successful google text\n  search query occured. Each instance is stored in app.viewModelLocations */\napp.ViewModelLocation = function (locationDetails) {\n\t'use strict';\n\n\tthis.name = locationDetails.name;\n\n\tthis.position = locationDetails.geometry.location;\n\t// The bounds of the map are updated ech time a location is added\n\tapp.map.updateBoundsWithPosition(this.position);\n\n\tthis.isHardcoded = app.isHardcoded(this.name);\n\n\t// Used when searching the locations to highlight the first match\n\tthis.highlighted = ko.observable(false);\n\n\t// An image is served for each hardcoded location\n\tif (this.isHardcoded) {\n\t\tthis.url = 'img/' + this.name.toLowerCase().replace(/ /g,\"-\") + '.jpg';\n\t} else {\n\t\tthis.url = \"\";\n\t}\n\n\tthis.buildMarker();\n\n\t// The content of the infoWindow is completed after querying Wikipedia\n\tthis.infoWindow = new google.maps.InfoWindow({\n\t\tmaxWidth: 280\n\t});\n\tthis.queryWikipedia();\n};\n\napp.ViewModelLocation.prototype.toggle = function () {\n\tif (this.marker.getAnimation() !== null) {\n\t\tthis.close();\n\t} else {\n\t\tapp.viewModel.closeAll();\n\t\tthis.open();\n\t}\n};\n\napp.ViewModelLocation.prototype.close = function () {\n\tif (this.marker.getAnimation() !== null) {\n\t\tthis.marker.setAnimation(null);\n\t\tthis.infoWindow.close();\n\t}\n};\n\napp.ViewModelLocation.prototype.open = function () {\n\tthis.marker.setAnimation(google.maps.Animation.BOUNCE);\n\tthis.infoWindow.open(app.map, this.marker);\n\t// Explicitly set the wikipedia link that for some reason doesn't work otherwise\n\t$(\".wiki-link\").click(function () {\n\t\tif (this.href) {\n\t\t\twindow.open(this.href);\n\t\t}\n\t});\n};\n\napp.ViewModelLocation.prototype.buildMarker = function () {\n\t// Create the marker without assigning it to the map\n\tthis.marker = new google.maps.Marker({\n\t\tposition: this.position,\n\t\ticon: this.isHardcoded ? 'img/gorilla-pin.png' : 'img/sugar-cane-pin.png',\n\t\tanimation: google.maps.Animation.DROP\n\t});\n\n\tthis.marker.addListener('click', function () {\n\t\tapp.viewModel.hide();\n\t\tthis.toggle()\n\t}.bind(this))\n};\n\napp.ViewModelLocation.prototype.queryWikipedia = function () {\n\tvar baseUrl = 'https://en.wikipedia.org/w/api.php?action=opensearch&search=',\n\t\trequestUrl = baseUrl + this.name + '&format=json';\n\n\t$.ajax({\n\t\turl: requestUrl,\n\t\tdataType: \"jsonp\",\n\t\tjsonp: \"callback\",\n\t\tsuccess: onSuccess.bind(this),\n\t\terror: onError.bind(this)\n\t});\n\n\tfunction onSuccess (response) {\n\t\tvar description = response[2][0],\n\t\t\turl = response[3][0];\n\n\t\tvar wikipediaData = {\n\t\t\tdescription: description,\n\t\t\turl: url\n\t\t}\n\n\t\tthis.setInfoWindow(wikipediaData);\n\t\tapp.oneLocationTreated(this.isHardcoded);\n\t}\n\n\tfunction onError () {\n\t\tthis.setInfoWindow();\n\t\tapp.oneLocationTreated(this.isHardcoded);\n\t}\n};\n\napp.ViewModelLocation.prototype.setInfoWindow = function (wikipediaData) {\n\tthis.infoWindow.addListener('closeclick', this.close.bind(this));\n\n\tvar $infoWindowHtml = $(this.infoWindowTemplate(this));\n\n\tif (!this.isHardcoded) {\n\t\t$infoWindowHtml.children('img').remove();\n\t}\n\n\tif (wikipediaData) {\n\t\tvar description = wikipediaData.description,\n\t\t\turl = wikipediaData.url;\n\t}\n\n\t// In case the wikipedia page obtained is a disambiguation page (containing 'may refer'),\n\t// the description is not included in the infowindow and only a link is provided\n\tif (description && description.length > 0 && !description.match(/may refer/)) {\n\t\t$infoWindowHtml.children('.wiki-description').text(description);\n\t} else {\n\t\t$infoWindowHtml.children('.wiki-description').remove();\n\t}\n\n\tif (url) {\n\t\t$infoWindowHtml.children('.wiki-link').attr('href', url);\n\t} else {\n\t\t$infoWindowHtml.children('.wiki-link').remove();\n\t}\n\n\tthis.infoWindow.setContent($infoWindowHtml.outerHtml());\n};\n\n// Underscore.js is used to create a templating function for the info window\napp.ViewModelLocation.prototype.infoWindowTemplate = _.template($('#infowindow-template').html());","/* global google.maps */\nvar app = app || {};\n\napp.mapModule = function () {\n\t'use strict';\n\n\tvar rwanda = new google.maps.LatLng(-1.930820, 29.874024);\n\tvar options = {\n\t\tcenter: rwanda,\n\t\tzoom: 9,\n\t\tdisableDefaultUI: true,\n\t\tstyles: [\n\t\t\t{\n\t\t\t\t\"featureType\": \"road.highway\",\n\t\t\t\t\"stylers\": [\n\t\t\t\t\t{ \"visibility\": \"off\" }\n\t\t\t\t]\n\t\t\t},{\n\t\t\t\t\"featureType\": \"administrative.country\",\n\t\t\t\t\"elementType\": \"geometry.stroke\",\n\t\t\t\t\"stylers\": [\n\t\t\t\t\t{ \"color\": app.colors.yellow }\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t};\n\n\tvar map = new google.maps.Map(document.getElementById('map'), options);\n\tvar bounds = new google.maps.LatLngBounds();\n\n\tmap.updateBoundsWithPosition = function (position) {\n\t\tbounds.extend(position);\n\t\tmap.fitBounds(bounds);\n\t};\n\n\tmap.panToPosition = function (position) {\n\t\tmap.panTo(position);\n\t};\n\n\t// These clicks are not triggered when clicking on a gorilla\n\tmap.addListener('click', function () {\n\t\tapp.viewModel.closeAll();\n\t});\n\n\treturn map;\n};","/* global */\nvar app = app || {};\n\n(function () {\n\t'use strict';\n\n\tapp.isHardcoded = function (locationName) {\n\t\tfor (var l=0, len=app.hardcodedLocations.length; l<len; l++) {\n\t\t\tif (app.hardcodedLocations[l] == locationName)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tapp.hasLocation = function (locationName) {\n\t\tif (app.isHardcoded(locationName)) return true;\n\t\tfor (var l=0, len=app.userLocations.length; l<len; l++) {\n\t\t\tif (app.userLocations[l] == locationName)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tapp.oneLocationTreated = function (isHardcoded) {\n\t\tif (isHardcoded) {\n\t\t\tvar locationsTreated = app.hardcodedLocations.treated();\n\t\t\tapp.hardcodedLocations.treated(locationsTreated + 1);\n\t\t} else if (app.userLocations) {\n\t\t\tvar locationsTreated = app.userLocations.treated();\n\t\t\tapp.userLocations.treated(locationsTreated + 1);\n\t\t}\n\t};\n})()","/* global ko, $ */\n\n// Helper functions\n(function() {\n\t'use strict';\n\n\tjQuery.fn.outerHtml = function () {\n\t\treturn jQuery('<div />').append(this.eq(0).clone()).html();\n\t};\n\n\t/* Binding handler factory taken from the TODOMVC project: http://todomvc.com/ */\n\tvar ENTER_KEY = 13;\n\tvar ESCAPE_KEY = 27;\n\tvar UP_ARROW = 38;\n\tvar DOWN_ARROW = 40;\n\n\t// A factory function we can use to create binding handlers for specific\n\t// keycodes.\n\tfunction keyhandlerBindingFactory(keyCode) {\n\t\treturn {\n\t\t\tinit: function (element, valueAccessor, allBindingsAccessor, data, bindingContext) {\n\t\t\t\tvar wrappedHandler, newValueAccessor;\n\n\t\t\t\t// wrap the handler with a check for the enter key\n\t\t\t\twrappedHandler = function (data, event) {\n\t\t\t\t\tif (event.keyCode === keyCode) {\n\t\t\t\t\t\tvalueAccessor().call(this, data, event);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// create a valueAccessor with the options that we would want to pass to the event binding\n\t\t\t\tnewValueAccessor = function () {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tkeyup: wrappedHandler\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// call the real event binding's init function\n\t\t\t\tko.bindingHandlers.event.init(element, newValueAccessor, allBindingsAccessor, data, bindingContext);\n\t\t\t}\n\t\t};\n\t}\n\n\tko.bindingHandlers.enterKey = keyhandlerBindingFactory(ENTER_KEY);\n\tko.bindingHandlers.escapeKey = keyhandlerBindingFactory(ESCAPE_KEY);\n\tko.bindingHandlers.upArrow = keyhandlerBindingFactory(UP_ARROW);\n\tko.bindingHandlers.downArrow = keyhandlerBindingFactory(DOWN_ARROW);\n\n\t// Keep the input bar focused when changing the showMode\n\tko.bindingHandlers.keepFocus = {\n\t    update: function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n\t        var focused = ko.unwrap(valueAccessor());\n\t        var showMode = bindingContext.$root.searchVM.showMode();\n\t        if (focused) $(element).focus();\n\t    }\n\t};\n}());","/* global ko */\nvar app = app || {};\n\napp.AddViewModel = function (viewModel) {\n\tthis.inputText = viewModel.inputText;\n\tthis.messaging = viewModel.messaging;\n\n\tthis.bar = ko.observable(false);\n\tvar addMessage = 'Add a new place !';\n\n\tthis.active = ko.computed(function() {\n\t\tvar bar = this.bar(),\n\t\t\tinputText = this.inputText();\n\t\treturn bar && !(inputText == addMessage);\n\t}.bind(this));\n\n\t// Toggle add bar or add a new location\n\tthis.onButtonClick = function () {\n\t\tif (!this.active()) {\n\t\t\tif (this.bar()) {\n\t\t\t\tapp.viewModel.hide();\n\t\t\t} else {\n\t\t\t\tapp.viewModel.openAddBar();\n\t\t\t\tapp.viewModel.inputText(addMessage);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add();\n\t\t}\n\t}.bind(this);\n\n\tthis.add = function () {\n\t\tvar inputText = this.inputText();\n\t\tif (inputText.length <= 1) {\n\t\t\tapp.viewModel.message('Type a location to add!');\n\t\t} else {\n\t\t\tapp.adder.addNewLocation(inputText);\n\t\t}\n\t};\n};","/* global ko */\nvar app = app || {};\n\napp.SearchViewModel = function (viewModel) {\n\t'use strict';\n\n\tthis.locations = viewModel.locations;\n\tthis.inputText = viewModel.inputText;\n\tthis.messaging = viewModel.messaging;\n\n\tthis.hardcodedLocations = ko.computed(function () {\n\t\treturn this.locations().filter(function (location) {\n\t\t\treturn location.isHardcoded;\n\t\t});\n\t}.bind(this));\n\n\tthis.userLocations = ko.computed(function () {\n\t\treturn this.locations().filter(function (location) {\n\t\t\treturn !location.isHardcoded;\n\t\t});\n\t}.bind(this));\n\n\t// The bar observable control the visibility and style of the input bar\n\tthis.bar = ko.observable(false);\n\tvar searchMessage = 'Search places in Rwanda';\n\n\tthis.showMode = ko.observable('hardcoded');\n\n\t// The active observable controls the visibility of the list view\n\tthis.active = ko.computed(function() {\n\t\tvar bar = this.bar(),\n\t\t\tinputText = this.inputText(),\n\t\t\tmessaging = this.messaging();\n\t\treturn bar && !(inputText == searchMessage) && !messaging;\n\t}.bind(this));\n\n\t// Toggle search bar\n\tthis.onButtonClick = function () {\n\t\tif (this.bar()) {\n\t\t\tapp.viewModel.hide();\n\t\t} else {\n\t\t\tapp.viewModel.openSearchBar();\n\t\t\tthis.inputText(searchMessage);\n\t\t}\n\t}.bind(this);\n\n\tthis.filterGorillas = function () {\n\t\tif (!this.showMode() == 'hardcoded') {\n\t\t\t// The search field is reset when changing the filter\n\t\t\tthis.inputText('');\n\t\t\tthis.showMode('hardcoded');\n\t\t}\n\t}.bind(this);\n\n\tthis.filterSugarCanes = function () {\n\t\tif (!this.showMode() == 'user') {\n\t\t\tthis.inputText('');\n\t\t\tthis.showMode('user');\n\t\t}\n\t}.bind(this);\n\n\tthis.filteredLocations = ko.computed(function() {\n\t\tvar showMode = this.showMode();\n\t\treturn showMode == 'hardcoded' ? this.hardcodedLocations : this.userLocations;\n\t}.bind(this));\n\n\tthis.matchingLocations = ko.computed(function () {\n\t\tvar inputText = this.inputText(),\n\t\t\tactive = this.active(),\n\t\t\tlocations = this.locations(),\n\t\t\tfilteredLocations = this.filteredLocations()();\n\n\t\tif (!active) {\n\t\t\t// All locations are visible\n\t\t\tlocations.forEach(function (location) {\n\t\t\t\tlocation.marker.setVisible(true)\n\t\t\t});\n\t\t\treturn locations;\n\n\t\t} else if (inputText == '') {\n\t\t\t// Only sugar canes or gorillas are visible\n\t\t\tlocations.forEach(function (location) {\n\t\t\t\tlocation.marker.setVisible(false)\n\t\t\t});\n\t\t\tfilteredLocations.forEach(function (location) {\n\t\t\t\tlocation.marker.setVisible(true);\n\t\t\t});\n\t\t\tif (filteredLocations.length) {\n\t\t\t\tthis.highlight(filteredLocations[0]);\n\t\t\t}\n\t\t\treturn filteredLocations;\n\n\t\t} else {\n\t\t\t// Only matching sugar canes or gorillas are visible\n\t\t\tinputText = inputText.toLowerCase().trim();\n\t\t\tvar matchingLocations = filteredLocations.filter(function (location) {\n\t\t\t\t// The text typed by the user will match if it is found anywhere\n\t\t\t\t// in a location name\n\t\t\t\tvar regex = new RegExp('.*' + inputText + '.*'),\n\t\t\t\t\tmatching = regex.test(location.name.toLowerCase());\n\n\t\t\t\tlocation.marker.setVisible(matching);\n\t\t\t\treturn matching;\n\t\t\t});\n\t\t\tif (matchingLocations.length) {\n\t\t\t\tthis.highlight(matchingLocations[0])\n\t\t\t}\n\t\t\treturn matchingLocations;\n\t\t}\n\t}.bind(this));\n\n\tthis.highlight = function (location) {\n\t\tthis.locations().forEach(function (location) {\n\t\t\tlocation.highlighted(false);\n\t\t});\n\t\tlocation.highlighted(true);\n\t}.bind(this);\n\n\t// On down arrow\n\tthis.highlightNext = function () {\n\t\tvar matchingLocations = this.matchingLocations();\n\t\tfor (var i=0, len=matchingLocations.length - 1; i<len; i++) {\n\t\t\tif (matchingLocations[i].highlighted()) {\n\t\t\t\tthis.highlight(matchingLocations[i+1]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\t// On up arrow\n\tthis.highlightPrevious = function () {\n\t\tvar matchingLocations = this.matchingLocations();\n\t\tfor (var i=1, len=matchingLocations.length; i<len; i++) {\n\t\t\tif (matchingLocations[i].highlighted()) {\n\t\t\t\tthis.highlight(matchingLocations[i-1]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\t// On enter key or list-item click\n\tthis.panToAndOpen = function () {\n\t\tvar location = this.highlightedLocation();\n\t\tif (location) {\n\t\t\tapp.viewModel.hide();\n\t\t\tlocation.toggle();\n\t\t\tapp.map.panToPosition(location.position);\n\t\t} else {\n\t\t\tapp.viewModel.message('Not in stock sorry!');\n\t\t}\n\t}.bind(this);\n\n\tthis.highlightedLocation = ko.computed(function() {\n\t\tvar matchingLocations = this.matchingLocations();\n\t\tfor (var i=0, len=matchingLocations.length; i<len; i++) {\n\t\t\tif (matchingLocations[i].highlighted()) {\n\t\t\t\treturn matchingLocations[i];\n\t\t\t}\n\t\t}\n\t}.bind(this));\n}","/* global ko */\nvar app = app || {};\n\n/* The main view model contains two sub-view models, correponding to the two main\nfunctionalities of the app: searching a location and adding a location\nThe main view model handles the input bar in the middle and how it is shared by\nthe two functionalities */\napp.ViewModel = function () {\n\t'use strict';\n\n\tthis.locations = app.viewModelLocations;\n\n\tthis.inputText = ko.observable('');\n\n\tthis.messaging = ko.observable(false);\n\n\tthis.searchVM = new app.SearchViewModel(this);\n\n\tthis.addVM = new app.AddViewModel(this);\n\n\tthis.ready = ko.observable(false);\n\n\tthis.message = function (message, duration, callback) {\n\t\tvar duration = duration || 1500;\n\t\tvar callback = callback || function() {}\n\t\tthis.messaging(true);\n\t\tthis.inputText(message);\n\t\twindow.setTimeout(function() {\n\t\t\tthis.inputText('');\n\t\t\tthis.messaging(false);\n\t\t\tcallback();\n\t\t}.bind(this), duration)\n\t};\n\n\tthis.click = function () {\n\t\tthis.inputText('');\n\t\tapp.viewModel.closeAll();\n\t}.bind(this);\n\n\tthis.hide = function () {\n\t\tthis.searchVM.bar(false);\n\t\tthis.addVM.bar(false);\n\t};\n\n\tthis.onEnterKey = function () {\n\t\tif (this.searchVM.bar()) {\n\t\t\tthis.searchVM.panToAndOpen();\n\t\t} else if (this.addVM.bar()) {\n\t\t\tthis.addVM.add();\n\t\t}\n\t};\n\n\tthis.onDownArrow = function () {\n\t\tif (this.searchVM.bar()) {\n\t\t\tthis.searchVM.highlightNext();\n\t\t}\n\t};\n\n\tthis.onUpArrow = function () {\n\t\tif (this.searchVM.bar()) {\n\t\t\tthis.searchVM.highlightPrevious();\n\t\t}\n\t};\n\n\tthis.closeAll = function () {\n\t\tthis.locations().forEach(function (location) {\n\t\t\tlocation.close();\n\t\t});\n\t};\n\n\tthis.openSearchBar = function () {\n\t\tthis.addVM.bar(false);\n\t\tthis.searchVM.bar(true);\n\t};\n\n\tthis.openAddBar = function () {\n\t\tthis.searchVM.bar(false);\n\t\tthis.addVM.bar(true);\n\t};\n};"],"sourceRoot":"/source/"}